{
  "toc": [
    {
      "authors": "Andy Terrel, Jonathan Rocher",
      "doi": "10.25080/Majora-8b375195-000",
      "author_email": ["aterrell@tacc.utexas.edu", "jrocher@enthought.com"],
      "page": {
        "stop": 1,
        "start": 1
      },
      "paper_id": "01_intro",
      "copyright_holder": "Andy Terrel et al.",
      "abstract": [],
      "keywords": "",
      "author_institution": [
        "University of Texas at Austin",
        "Enthought, Inc."
      ],
      "author": ["Andy Terrel", "Jonathan Rocher"],
      "bibliography": "",
      "video": "",
      "author_institution_map": {
        "Jonathan Rocher": ["Enthought, Inc."],
        "Andy Terrel": ["University of Texas at Austin"]
      },
      "title": "Preface"
    },
    {
      "authors": "Kapil Arya, Gene Cooperman",
      "doi": "10.25080/Majora-8b375195-001",
      "author_email": ["kapil@ccs.neu.edu", "gene@ccs.neu.edu"],
      "page": {
        "stop": 7,
        "start": 2
      },
      "paper_id": "arya",
      "copyright_holder": "Kapil Arya et al.",
      "abstract": [
        "DMTCP (Distributed MultiThreaded CheckPointing) is a mature\ncheckpoint-restart package.  It operates in user-space without kernel\nprivilege, and adapts to application-specific requirements through plugins.\nWhile DMTCP has been able to checkpoint Python and IPython \\textquotedbl{}from  the\noutside\\textquotedbl{} for many years, a Python module has recently been created to\nsupport DMTCP.  IPython support is included through a new DMTCP plugin.\nA checkpoint can be requested interactively within a\nPython session, or under the control of a specific Python program.\nFurther, the Python program can execute specific Python code prior\nto checkpoint, upon resuming (within the original process), and upon\nrestarting (from a checkpoint image).  Applications of DMTCP are demonstrated\nfor: (i) Python-based graphics using VNC; (ii) a Fast/Slow technique\nto use multiple hosts or cores to check one Cython computation in parallel;\nand (iii) a reversible debugger, FReD, with a novel reverse-expression\nwatchpoint feature for locating the cause of a bug."
      ],
      "keywords": "checkpoint-restart, DMTCP, IPython, Cython, reversible debugger",
      "pages": 6,
      "author_institution": [
        "Northeastern University",
        "Northeastern University"
      ],
      "author": ["Kapil Arya", "Gene Cooperman"],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=1l_wGZz0JEE",
      "author_institution_map": {
        "Kapil Arya": ["Northeastern University"],
        "Gene Cooperman": ["Northeastern University"]
      },
      "title": "DMTCP: Bringing Checkpoint-Restart to Python"
    },
    {
      "authors": "Christopher Beaumont, Thomas Robitaille, Alyssa Goodman, Michelle Borkin",
      "doi": "10.25080/Majora-8b375195-002",
      "author_email": [
        "cbeaumont@cfa.harvard.edu",
        "robitaille@mpia.de",
        "agoodman@cfa.harvard.edu",
        "borkin@seas.harvard.edu"
      ],
      "page": {
        "stop": 12,
        "start": 8
      },
      "paper_id": "beaumont",
      "copyright_holder": "Christopher Beaumont et al.",
      "abstract": [
        "Modern research projects incorporate data from several sources,\nand new insights are increasingly driven by the ability to\ninterpret data in the context of other data. Glue is an interactive environment built on top\nof the standard Python science stack to visualize relationships\nwithin and between datasets. With Glue, users can load and\nvisualize multiple related datasets simultaneously. Users specify\nthe logical connections that exist between data, and Glue\ntransparently uses this information as needed to enable\nvisualization across files. This functionality makes it trivial,\nfor example, to interactively overplot catalogs on top of images.",
        "The central philosophy behind Glue is that the structure of\nresearch data is highly customized and problem-specific. Glue aims\nto accommodate this and simplify the \\textquotedbl{}data munging\\textquotedbl{} process, so that\nresearchers can more naturally explore what their data have to\nsay. The result is a cleaner scientific workflow, faster\ninteraction with data, and an easier avenue to insight."
      ],
      "keywords": "data visualization, exploratory data analysis, Python",
      "pages": 5,
      "author_institution": [
        "University of Hawaii, Harvard University",
        "Max Planck Institute for Astronomy",
        "Harvard University",
        "Harvard University"
      ],
      "author": [
        "Christopher Beaumont",
        "Thomas Robitaille",
        "Alyssa Goodman",
        "Michelle Borkin"
      ],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=47LNpvDlKUk",
      "author_institution_map": {
        "Christopher Beaumont": ["University of Hawaii, Harvard University"],
        "Thomas Robitaille": ["Max Planck Institute for Astronomy"],
        "Alyssa Goodman": ["Harvard University"],
        "Michelle Borkin": ["Harvard University"]
      },
      "title": "Multidimensional Data Exploration with Glue"
    },
    {
      "authors": "James Bergstra, Dan Yamins, David D. Cox",
      "doi": "10.25080/Majora-8b375195-003",
      "author_email": [
        "james.bergstra@uwaterloo.ca",
        "yamins@mit.edu",
        "davidcox@fas.harvard.edu"
      ],
      "page": {
        "stop": 19,
        "start": 13
      },
      "paper_id": "bergstra_hyperopt",
      "copyright_holder": "James Bergstra et al.",
      "abstract": [
        "Sequential model-based optimization (also known as Bayesian optimization) is one of the most efficient methods (per function evaluation) of function minimization.\nThis efficiency makes it appropriate for optimizing the hyperparameters of machine learning algorithms that are slow to train.\nThe Hyperopt library provides algorithms and parallelization infrastructure for performing hyperparameter optimization (model selection) in Python.\nThis paper presents an introductory tutorial on the usage of the Hyperopt library, including the description of search spaces, minimization (in serial and parallel),\nand the analysis of the results collected in the course of minimization.\nThe paper closes with some discussion of ongoing and future work."
      ],
      "keywords": "Bayesian optimization, hyperparameter optimization, model selection",
      "pages": 7,
      "author_institution": [
        "University of Waterloo",
        "Massachusetts Institute of Technology",
        "Harvard University"
      ],
      "author": ["James Bergstra", "Dan Yamins", "David D. Cox"],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=Mp1xnPfE4PY",
      "author_institution_map": {
        "James Bergstra": ["University of Waterloo"],
        "Dan Yamins": ["Massachusetts Institute of Technology"],
        "David D. Cox": ["Harvard University"]
      },
      "title": "Hyperopt: A Python Library for Optimizing the Hyperparameters of Machine Learning Algorithms"
    },
    {
      "authors": "James Bergstra, Nicolas Pinto, David D. Cox",
      "doi": "10.25080/Majora-8b375195-004",
      "author_email": [
        "james.bergstra@uwaterloo.ca",
        "pinto@mit.edu",
        "davidcox@fas.harvard.edu"
      ],
      "page": {
        "stop": 26,
        "start": 20
      },
      "paper_id": "bergstra_skdata",
      "copyright_holder": "James Bergstra et al.",
      "abstract": [
        "Machine learning benchmark data sets come in all shapes and sizes,\nwhereas classification algorithms assume sanitized input,\nsuch as (x, y) pairs with vector-valued input x and integer class label y.\nResearchers and practitioners know all too well how tedious it can be to\nget from the URL of a new data set to a NumPy ndarray suitable for e.g. pandas or sklearn.\nThe SkData library handles that work for a growing number of benchmark data sets\n(small and large)\nso that one-off in-house scripts for downloading and parsing data sets can be replaced with library code that is reliable, community-tested, and documented.\nThe SkData library also introduces an open-ended formalization of training and\ntesting protocols that facilitates direct comparison with published\nresearch.\nThis paper describes the usage and architecture of the SkData library."
      ],
      "keywords": "machine learning, cross validation, reproducibility",
      "pages": 7,
      "author_institution": [
        "University of Waterloo",
        "Massachusetts Institute of Technology",
        "Harvard University"
      ],
      "author": ["James Bergstra", "Nicolas Pinto", "David D. Cox"],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=u5amehIiImo",
      "author_institution_map": {
        "James Bergstra": ["University of Waterloo"],
        "Nicolas Pinto": ["Massachusetts Institute of Technology"],
        "David D. Cox": ["Harvard University"]
      },
      "title": "SkData: Data Sets and Algorithm Evaluation Protocols in Python"
    },
    {
      "authors": "Gustavo Bragança, Simone Daflon, Katia Cunha, Thomas Bensby, Sally Oey, Gregory Walth",
      "doi": "10.25080/Majora-8b375195-005",
      "author_email": [
        "ga.braganca@gmail.com",
        "daflon@on.br",
        "cunha@email.noao.edu",
        "tbensby@astro.lu.se",
        "msoey@umich.edu",
        "gwalth@email.arizona.edu"
      ],
      "page": {
        "stop": 31,
        "start": 27
      },
      "paper_id": "braganca",
      "copyright_holder": "Gustavo Bragança et al.",
      "abstract": [
        "Stars are fundamental pieces that compose our Universe. By\nstudying them we can better comprehend the environment in which we\nlive. In this work, we have studied a sample of 350 nearby O and B\nstars and have  characterized them in aspects of their multiplicity,\ntemperature, spectral classifications, and projected rotational\nvelocity.",
        "Python is a robust language with a steep learning curve, i.e. one\ncan make rapid progress with it. In this proceeding, we will\npresent how we used Python in our research."
      ],
      "keywords": "Astronomy, Stars, Galactic Disk",
      "pages": 5,
      "author_institution": [
        "Observatório Nacional, Brazil",
        "Observatório Nacional, Brazil",
        "Observatório Nacional, Brazil; National Optical Astronomy\nObservatory, University of Arizona, U. S. A.",
        "Lund Observatory, Sweden",
        "University of Michigan, U. S. A.",
        "Steward Observatory, U. S. A."
      ],
      "author": [
        "Gustavo Bragança",
        "Simone Daflon",
        "Katia Cunha",
        "Thomas Bensby",
        "Sally Oey",
        "Gregory Walth"
      ],
      "bibliography": "",
      "video": "",
      "author_institution_map": {
        "Thomas Bensby": ["Lund Observatory, Sweden"],
        "Simone Daflon": ["Observatório Nacional, Brazil"],
        "Sally Oey": ["University of Michigan, U. S. A."],
        "Gregory Walth": ["Steward Observatory, U. S. A."],
        "Gustavo Bragança": ["Observatório Nacional, Brazil"],
        "Katia Cunha": [
          "Observatório Nacional, Brazil; National Optical Astronomy\nObservatory, University of Arizona, U. S. A."
        ]
      },
      "title": "Using Python to Study Rotational Velocity Distributions of Hot Stars"
    },
    {
      "authors": "Mark E Fenner, Barbara M. Fenner",
      "doi": "10.25080/Majora-8b375195-006",
      "author_email": ["mfenner@gmail.com", "barb.fenner@gmail.com"],
      "page": {
        "stop": 37,
        "start": 32
      },
      "paper_id": "fenner",
      "copyright_holder": "Mark E Fenner et al.",
      "abstract": [
        "Quantitative confocal microscopy is a powerful analytical tool\nused to visualize the associations between cellular processes and\nanatomical structures.  In our biological experiments, we use\nquantitative confocal microscopy to study the association of three\ncellular components: binding proteins, receptors, and organelles.\nWe propose an automated method that will (1) reduce the time\nconsuming effort of manual background correction and (2) compute\nnumerical coefficients to associate cellular process with\nstructure.  The project is implemented, end-to-end, in Python.\nPure Python is used for managing file access, input parameters,\nand initial processing of the repository of 933 images.  NumPy\nis used to apply manual background correction, to compute the\nautomated background corrections, and to calculate the domain\nspecific coefficients.  We visualize the raw intensity values and\ncomputed coefficient values with Tufte-style panel plots created\nin matplotlib.  A longer term goal of this work is to explore\nplausible extensions of our automated methods to triple-label\ncoefficients."
      ],
      "keywords": "confocal microscopy, immunofluorescence, thresholding,\ncolocalization coefficients",
      "pages": 6,
      "author_institution": [
        "Coveros, Inc., Fairfax, VA",
        "King's College, Wilkes-Barre, PA"
      ],
      "author": ["Mark E Fenner", "Barbara M. Fenner"],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=ar5YtgiXfNI",
      "author_institution_map": {
        "Barbara M. Fenner": ["King's College, Wilkes-Barre, PA"],
        "Mark E Fenner": ["Coveros, Inc., Fairfax, VA"]
      },
      "title": "Automating Quantitative Confocal Microscopy Analysis"
    },
    {
      "authors": "Patricia Francis-Lyon, Shashank Belvadi, Fu-Yuan Cheng",
      "doi": "10.25080/Majora-8b375195-007",
      "author_email": ["pfrancislyon@cs.usfca.edu"],
      "page": {
        "stop": 43,
        "start": 38
      },
      "paper_id": "francis-lyon",
      "copyright_holder": "Patricia Francis-Lyon et al.",
      "abstract": [
        "It is well known that two or more genes can interact so as to enhance or suppress incidence of disease,\nsuch that the observed phenotype differs from when the genes act independently.   The effect of a gene allele\nat one locus can mask or modify the effect of alleles at one or more other loci. Discovery and characterization\nof such gene interactions is pursued as a valuable aid in early diagnosis and treatment of disease.\nAlso it is hoped that the characterization of such interactions will shed light on biological and biochemical pathways\nthat are involved in a specific disease, leading to new therapeutic treatments.",
        "Much attention has been focused on the application of machine learning approaches to detection of gene interactions.\nOur method is based upon training a supervised learning algorithm to detect disease, and then quantifying the effect\non prediction accuracy when alleles of two or more genes are perturbed to unmutated in patterns so as to reveal and\ncharacterize gene interactions.  We utilize this approach with a support vector machine.",
        "We test the versatility of our approach using seven disease models, some of which model gene interactions and some of\nwhich model biological independence.  In every disease model we correctly detect the presence or absence of 2-way and\n3-way gene interactions using our method. We also correctly characterize all of the interactions as to the epistatic\neffect of gene alleles in both 2-way and 3-way gene interactions.  This provides evidence that this machine learning approach\ncan be used to successfully detect and also characterize gene interactions in disease."
      ],
      "keywords": "machine learning, support vector machine, genetic risk factors,  gene interactions",
      "pages": 6,
      "author_institution": [
        "University of San Francisco",
        "University of San Francisco",
        "University of San Francisco"
      ],
      "author": ["Patricia Francis-Lyon", "Shashank Belvadi", "Fu-Yuan Cheng"],
      "bibliography": "",
      "video": "http://www.youtube.com/wa?v=IA09mZRCCA8",
      "author_institution_map": {
        "Fu-Yuan Cheng": ["University of San Francisco"],
        "Patricia Francis-Lyon": ["University of San Francisco"],
        "Shashank Belvadi": ["University of San Francisco"]
      },
      "title": "Detection and characterization of interactions of genetic risk factors in disease"
    },
    {
      "authors": "Serge Guelton, Pierrick Brunet, Alan Raynaud, Adrien Merlini, Mehdi Amini",
      "doi": "10.25080/Majora-8b375195-008",
      "author_email": [
        "serge.guelton@telecom-bretagne.eu",
        "pierrick.brunet@telecom-bretagne.eu",
        "alan.raynaud@telecom-bretagne.eu",
        "adrien.merlini@telecom-bretagne.eu",
        "mehdi.amini@silkan.com"
      ],
      "page": {
        "stop": 50,
        "start": 44
      },
      "paper_id": "guelton",
      "copyright_holder": "Serge Guelton et al.",
      "abstract": [
        "Pythran is a young open source static compiler that turns modules written\nin a subset of Python into native ones. Based on the fact that scientific\nmodules do not rely much on the dynamic features of the language, it trades\nthem in favor of powerful, eventually inter procedural, optimizations.\nThese include detection of pure functions, temporary allocation removal,\nconstant folding, Numpy ufunc fusion and parallelization, explicit\nthread-level parallelism through OpenMP annotations, false variable\npolymorphism pruning, and automatic vector instruction generation such as\nAVX or SSE.",
        "In addition to these compilation steps, Pythran provides a C++ runtime library that\nleverages the C++ STL to provide generic containers, and the Numeric\nTemplate Toolbox (NT2) for Numpy support. It takes advantage of modern C++11\nfeatures such as variadic templates, type inference, move semantics and\nperfect forwarding, as well as classical ones such as expression templates.",
        "The input code remains compatible with the Python interpreter, and output\ncode is generally as efficient as the annotated Cython equivalent, if not\nmore, without the backward compatibility loss of Cython. Numpy expressions\nrun faster than when compiled with numexpr, without any change of the\noriginal code."
      ],
      "keywords": "static compilation, numpy, c++",
      "pages": 7,
      "author_institution": [
        "ENS, Paris, France",
        "Télécom Bretagne, Plouzané, France",
        "Télécom Bretagne, Plouzané, France",
        "Télécom Bretagne, Plouzané, France",
        "SILKAN, Los Altos, USA"
      ],
      "author": [
        "Serge Guelton",
        "Pierrick Brunet",
        "Alan Raynaud",
        "Adrien Merlini",
        "Mehdi Amini"
      ],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=KT5-uGEpnGw",
      "author_institution_map": {
        "Alan Raynaud": ["Télécom Bretagne, Plouzané, France"],
        "Adrien Merlini": ["Télécom Bretagne, Plouzané, France"],
        "Serge Guelton": ["ENS, Paris, France"],
        "Pierrick Brunet": ["Télécom Bretagne, Plouzané, France"],
        "Mehdi Amini": ["SILKAN, Los Altos, USA"]
      },
      "title": "Pythran: Enabling Static Optimization of Scientific Python Programs"
    },
    {
      "authors": "Pedro Henrique Hasselmann, Jorge Márcio Carvano, Daniela Lazzaro",
      "doi": "10.25080/Majora-8b375195-009",
      "author_email": ["hasselmann@on.br", "carvano@on.br", "lazzaro@on.br"],
      "page": {
        "stop": 57,
        "start": 51
      },
      "paper_id": "hasselmann",
      "copyright_holder": "Pedro Henrique Hasselmann et al.",
      "abstract": [
        "The original G-mode was a clustering method developed by A. I. Gavrishin in the late 60's for geochemical classification of rocks,\nbut was also applied to asteroid photometry, cosmic rays, lunar sample and planetary science spectroscopy data.\nIn this work, we used an adapted version to classify the asteroid photometry from SDSS Moving Objects Catalog.\nThe method works by identifying normal distributions in a multidimensional space of variables.\nThe identification starts by locating a set of points with smallest mutual distance in the sample,\nwhich is a problem when data is not planar. Here we present a modified version of the G-mode algorithm,\nwhich was previously written in FORTRAN 77, in Python 2.7 and using NumPy, SciPy and Matplotlib packages.\nThe NumPy was used for array and matrix manipulation and Matplotlib for plot control.\nThe Scipy had a import role in speeding up G-mode, Scipy.spatial.distance.mahalanobis was chosen as distance estimator and\nNumpy.histogramdd was applied to find the initial seeds from which clusters are going to evolve.\nScipy was also used to quickly produce dendrograms showing the distances among clusters.",
        "Finally, results for Asteroids Taxonomy and tests for different sample sizes and implementations are presented."
      ],
      "keywords": "clustering, taxonomy, asteroids, statistics, multivariate data, scipy, numpy",
      "pages": 7,
      "author_institution": [
        "Observatorio Nacional, Rio de Janeiro, Brazil",
        "Observatorio Nacional, Rio de Janeiro, Brazil",
        "Observatorio Nacional, Rio de Janeiro, Brazil"
      ],
      "author": [
        "Pedro Henrique Hasselmann",
        "Jorge Márcio Carvano",
        "Daniela Lazzaro"
      ],
      "bibliography": "",
      "video": "",
      "author_institution_map": {
        "Pedro Henrique Hasselmann": [
          "Observatorio Nacional, Rio de Janeiro, Brazil"
        ],
        "Daniela Lazzaro": ["Observatorio Nacional, Rio de Janeiro, Brazil"],
        "Jorge Márcio Carvano": [
          "Observatorio Nacional, Rio de Janeiro, Brazil"
        ]
      },
      "title": "Adapted G-mode Clustering Method applied to Asteroid Taxonomy"
    },
    {
      "authors": "Eric Jeschke",
      "doi": "10.25080/Majora-8b375195-00a",
      "author_email": ["eric@naoj.org"],
      "page": {
        "stop": 64,
        "start": 58
      },
      "paper_id": "jeschke",
      "copyright_holder": "Eric Jeschke.",
      "abstract": [
        "Ginga is a new astronomical image viewer written in Python.  It uses and\ninter-operates with several key scientific Python packages: NumPy,\nAstropy, and SciPy.  A key differentiator for this image viewer, compared\nto older-generation FITS viewers, is that all the key components are\nwritten as Python classes, allowing for the first time a powerful FITS\nimage display widget to be directly embedded in, and tightly coupled\nwith, Python code.",
        "We call Ginga a toolkit for programming FITS viewers because it includes\na choice of base classes for programming custom viewers for two\ndifferent modern widget sets: Gtk and Qt, available on the three common\ndesktop platforms.  In addition, a reference\nviewer is included with the source code based on a plugin\narchitecture in which the viewer can be extended with plugins\nscripted in Python.  The code is released under a BSD license\nsimilar to other major Python packages and is available on GitHub.",
        "Ginga has been introduced only recently as a tool to the astronomical\ncommunity, but since SciPy has a developer focus this talk concentrates\non programming with the Ginga toolkit.  We cover two cases: using the\nbare image widget to build custom viewers and writing plugins for the\nexisting full-featured Ginga viewer.  The talk may be of interest to\nanyone developing code in Python needing to display scientific image\n(CCD or CMOS) data and astronomers interested in Python-based quick look\nand analysis tools."
      ],
      "keywords": "FITS, viewer, astronomical, images, Python, NumPy, SciPy, Astropy",
      "pages": 7,
      "author_institution": [
        "Subaru Telescope, National Astronomical Observatory of Japan"
      ],
      "author": ["Eric Jeschke"],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=nZKy_nYUxCs",
      "author_institution_map": {
        "Eric Jeschke": [
          "Subaru Telescope, National Astronomical Observatory of Japan"
        ]
      },
      "title": "Ginga: an open-source astronomical image viewer and toolkit"
    },
    {
      "authors": "Hari Krishnan, Cyrus Harrison, Brad Whitlock, David Pugmire, Hank Childs",
      "doi": "10.25080/Majora-8b375195-00b",
      "author_email": [
        "hkrishnan@lbl.gov",
        "cyrush@llnl.gov",
        "whitlock2@llnl.gov",
        "pugmire@ornl.gov",
        "hchilds@lbl.gov"
      ],
      "page": {
        "stop": 69,
        "start": 65
      },
      "paper_id": "krishnan",
      "copyright_holder": "Hari Krishnan et al.",
      "abstract": [
        "As High Performance Computing (HPC) environments expand to address the\nlarger\ncomputational needs of massive simulations and specialized data analysis\nand visualization routines, the complexity of these environments brings\nmany challenges for scientists hoping to capture and publish their work\nin a reproducible manner.",
        "Collaboration using HPC resources is a particularly difficult aspect of\nthe research process to capture.\nThis is also the case for HPC visualization, even though there has been\nan explosion of technologies and tools for sharing in other contexts.",
        "Practitioners aiming for reproducibility would benefit from collaboration\ntools in this space that support the ability to automatically capture\nmulti-user collaborative interactions.\nFor this work, we modified VisIt, an open source scientific visualization\nplatform, to provide an environment aimed at addressing these shortcomings.",
        "This short paper focuses on two exploratory features added to VisIt:",
        "1. We enhanced VisIt's infrastructure expose a JSON API to clients over WebSockets.\nThe new JSON API enables VisIt clients on web-based and mobile platforms.\nThis API also enables multi-user collaborative visualization sessions.\nThese collaborative visualization sessions can record annotated user\ninteractions to Python scripts that can be replayed to reproduce the\nsession in the future, thus capturing not only the end product but the\nstep-by-step process used to create the visualization.",
        "2. We have also added support for new Python \\& R programmable pipelines\nwhich allow users to easily execute their analysis scripts within VisIt's\nparallel infrastructure.\nThe goal of this new functionality is to provide users familiar with of\nPython and R with an easier path to embed their analysis within VisIt.",
        "Finally, to showcase how these new features enable reproducible science, we\npresent a workflow that demonstrates a Climate Science use case."
      ],
      "keywords": "python, reproducibility, collaboration, scripting",
      "pages": 5,
      "author_institution": [
        "Lawrence Berkeley National Laboratory",
        "Lawrence Livermore National Laboratory",
        "Lawrence Livermore National Laboratory",
        "Oak Ridge National Laboratory",
        "Lawrence Berkeley National Laboratory/The University of Oregon"
      ],
      "author": [
        "Hari Krishnan",
        "Cyrus Harrison",
        "Brad Whitlock",
        "David Pugmire",
        "Hank Childs"
      ],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=ei_pFi2xOUc",
      "author_institution_map": {
        "Brad Whitlock": ["Lawrence Livermore National Laboratory"],
        "David Pugmire": ["Oak Ridge National Laboratory"],
        "Hari Krishnan": ["Lawrence Berkeley National Laboratory"],
        "Hank Childs": [
          "Lawrence Berkeley National Laboratory/The University of Oregon"
        ],
        "Cyrus Harrison": ["Lawrence Livermore National Laboratory"]
      },
      "title": "Exploring Collaborative HPC Visualization Workflows using VisIt and Python"
    },
    {
      "authors": "Stuart Mumford, David Pérez-Suárez, Steven Christe, Florian Mayer, Russell J. Hewett",
      "doi": "10.25080/Majora-8b375195-00c",
      "author_email": [
        "stuart@mumford.me.uk",
        "dps.helio@gmail.com",
        "steven.d.christe@nasa.gov",
        "florian.mayer@bitsrc.org",
        "rhewett@mit.edu"
      ],
      "page": {
        "stop": 73,
        "start": 70
      },
      "paper_id": "mumford",
      "copyright_holder": "Stuart Mumford et al.",
      "abstract": [
        "SunPy is a data analysis toolkit which provides the necessary software for analyzing solar and heliospheric datasets in Python.\nSunPy aims to provide a free and open-source alternative to the current standard, an IDL-based solar data analysis environment known as SolarSoft (SSW).\nWe present the latest release of SunPy, version  0.3.\nThough still in active development, SunPy already provides important functionality for solar data analysis.\nSunPy provides data structures for representing the most common solar data types: images, lightcurves, and spectra.\nTo enable the acquisition of scientific data, SunPy provides integration with the Virtual Solar Observatory (VSO), a single source for accessing most solar data sets, and integration with the Heliophysics Event Knowledgebase (HEK), a database of transient solar events such as solar flares or coronal mass ejections.\nSunPy utilizes many packages from the greater scientific Python community, including NumPy and SciPy for core data types and analysis routines, PyFITS for opening image files, in FITS format, from major solar missions (e.g., SDO/AIA, SOHO/EIT, SOHO/LASCO, and STEREO) into WCS-aware map objects, and pandas for advanced time-series analysis tools for  data from missions such as GOES, SDO/EVE, and Proba2/LYRA, as well as support for radio spectra (e.g., e-Callisto).\nFuture releases will build upon and integrate with current work in the Astropy project and the rest of the scientific python community, to bring greater functionality to SunPy users."
      ],
      "keywords": "Python, Solar Physics, Scientific Python",
      "pages": 4,
      "author_institution": [
        "The University of Sheffield",
        "Finnish Meteorological Institute",
        "NASA Goddard Space Flight Center",
        "Vienna University of Technology",
        "Massachusetts Institute of Technology"
      ],
      "author": [
        "Stuart Mumford",
        "David Pérez-Suárez",
        "Steven Christe",
        "Florian Mayer",
        "Russell J. Hewett"
      ],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=bXPPTCkaVu8",
      "author_institution_map": {
        "Stuart Mumford": ["The University of Sheffield"],
        "Florian Mayer": ["Vienna University of Technology"],
        "David Pérez-Suárez": ["Finnish Meteorological Institute"],
        "Steven Christe": ["NASA Goddard Space Flight Center"],
        "Russell J. Hewett": ["Massachusetts Institute of Technology"]
      },
      "title": "SunPy: Python for Solar Physicists"
    },
    {
      "authors": "Geoffrey M Poore",
      "doi": "10.25080/Majora-8b375195-00d",
      "author_email": ["gpoore@uu.edu"],
      "page": {
        "stop": 80,
        "start": 74
      },
      "paper_id": "poore",
      "copyright_holder": "Geoffrey M Poore.",
      "abstract": [
        "PythonTeX is a LaTeX package that allows Python code in a LaTeX\ndocument to be executed.  This makes possible reproducible documents that\ncombine analysis with the code required to perform it.\nWriting such documents can be more efficient because code is adjacent to\nits output.  Writing is also less error-prone since results may be accessed\ndirectly from within the document, without copy-and-pasting.  This paper\nprovides an overview of PythonTeX, including Python output caching,\ndependency tracking, synchronization of errors and warnings with the LaTeX\ndocument, conversion of documents to other formats, and support for\nlanguages beyond Python.  These features are illustrated through an\nextended, step-by-step example of reproducible analysis performed with\nPythonTeX."
      ],
      "keywords": "reproducible science, reproducible documents, dynamic report\ngeneration",
      "pages": 7,
      "author_institution": ["Union University"],
      "author": ["Geoffrey M Poore"],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=G-UDHc2UVOg",
      "author_institution_map": {
        "Geoffrey M Poore": ["Union University"]
      },
      "title": "Reproducible Documents with PythonTeX"
    },
    {
      "authors": "Adam J Richards, Andrzej S. Kosinski, Camille Bonneaud, Delphine Legrand, Kouros Owzar",
      "doi": "10.25080/Majora-8b375195-00e",
      "author_email": [
        "adam.richards@stat.duke.edu",
        "andrzej.kosinski@duke.edu",
        "C.Bonneaud@exeter.ac.uk",
        "legrand@dr14.cnrs.fr",
        "kouros.owzar@duke.edu"
      ],
      "page": {
        "stop": 85,
        "start": 81
      },
      "paper_id": "richards",
      "copyright_holder": "Adam J Richards et al.",
      "abstract": [
        "There is evidence to suggest that a surprising proportion\nof published experiments in science are difficult if not impossible to\nreproduce. The concepts of data sharing, leaving an audit trail and\nextensive documentation are fundamental to reproducible research,\nwhether it is in the laboratory or as part of an analysis. In this\nwork, we introduce a tool for documentation that aims to make analyses\nmore reproducible in the general scientific community.",
        "The application, lpEdit, is a cross-platform editor, written with PyQt4,\nthat enables a broad range of scientists to carry out the analytic\ncomponent of their work in a reproducible manner—through the use of\nliterate programming. Literate programming mixes code and prose to\nproduce a final report that reads like an article or book. lpEdit\ntargets researchers getting started with statistics or programming, so\nthe hurdles associated with setting up a proper pipeline are kept to a\nminimum and the learning burden is reduced through the use of\ntemplates and documentation. The documentation for lpEdit is centered\naround learning by example, and accordingly we use several\nincreasingly involved examples to demonstrate the software’s\ncapabilities.",
        "We first consider applications of lpEdit to process analyses mixing\nR and Python code with the  documentation\nsystem. Finally, we illustrate the use of lpEdit to conduct a\nreproducible functional analysis of high-throughput sequencing\ndata, using the transcriptome of the butterfly species Pieris\nbrassicae."
      ],
      "keywords": "reproducible research, text editor, RNA-seq",
      "pages": 5,
      "author_institution": [
        "Biostatistics \\& Bioinformatics, Duke University Medical Center, Durham, NC, 27710, USA and Station d'Ecologie Experimentale du CNRS, Moulis, 09200, France.",
        "Biostatistics \\& Bioinformatics, Duke University Medical Center, Durham, NC, 27710, USA.",
        "Station d'Ecologie Experimentale du CNRS, Moulis, 09200, France and Centre for Ecology and Conservation, University of Exeter Cornwall, Penryn, UK.",
        "Station d'Ecologie Experimentale du CNRS, Moulis, 09200, France.",
        "Duke Cancer Institute, Duke University Medical Center, Durham, NC, 27710, USA."
      ],
      "author": [
        "Adam J Richards",
        "Andrzej S. Kosinski",
        "Camille Bonneaud",
        "Delphine Legrand",
        "Kouros Owzar"
      ],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=1HCeSwMirIA",
      "author_institution_map": {
        "Camille Bonneaud": [
          "Station d'Ecologie Experimentale du CNRS, Moulis, 09200, France and Centre for Ecology and Conservation, University of Exeter Cornwall, Penryn, UK."
        ],
        "Andrzej S. Kosinski": [
          "Biostatistics \\& Bioinformatics, Duke University Medical Center, Durham, NC, 27710, USA."
        ],
        "Adam J Richards": [
          "Biostatistics \\& Bioinformatics, Duke University Medical Center, Durham, NC, 27710, USA and Station d'Ecologie Experimentale du CNRS, Moulis, 09200, France."
        ],
        "Delphine Legrand": [
          "Station d'Ecologie Experimentale du CNRS, Moulis, 09200, France."
        ],
        "Kouros Owzar": [
          "Duke Cancer Institute, Duke University Medical Center, Durham, NC, 27710, USA."
        ]
      },
      "title": "lpEdit: an editor to facilitate reproducible analysis via literate programming"
    },
    {
      "authors": "Ramalingam Saravanan",
      "doi": "10.25080/Majora-8b375195-00f",
      "author_email": ["sarava@tamu.edu"],
      "page": {
        "stop": 91,
        "start": 86
      },
      "paper_id": "saravanan",
      "copyright_holder": "Ramalingam Saravanan.",
      "abstract": [
        "The notebook interface, which blends text and graphics, has been in\nuse for a number of years in commercial mathematical software and is\nnow finding more widespread usage in scientific Python with the\navailability browser-based front-ends like the Sage and IPython\nnotebooks. This paper describes a new open-source Python project,\nGraphTerm, that takes a slightly different approach to blending text\nand graphics to create a notebook-like interface. Rather than\noperating at the application level, it works at the unix shell level\nby extending the command line interface to incorporate elements of\nthe graphical user interface. The XTerm terminal escape sequences\nare augmented to allow any program to interactively display inline\ngraphics (or other HTML content) simply by writing to standard\noutput.",
        "GraphTerm is designed to be a drop-in replacement for the standard\nunix terminal, with additional features for multiplexing sessions\nand easy deployment in the cloud. The interface aims to be\ntablet-friendly, with features like clickable/tappable directory\nlistings for navigating folders etc. The user can switch, as needed,\nbetween standard line-at-a-time shell mode and the notebook mode,\nwhere multiple lines of code are entered in cells, allowing for\nin-place editing and re-execution. Multiple users can share terminal\nsessions for collaborative computing.",
        "GraphTerm is implemented in Python, using the Tornado web framework\nfor the server component and HTML+Javascript for the browser\nclient. This paper discusses the architecture and capabilities of\nGraphTerm, and provides usage examples such as inline data\nvisualization using matplotlib and the notebook mode."
      ],
      "keywords": "GUI, CLI, graphical user interface, command line\ninterface, notebook interface, graphical shell",
      "pages": 6,
      "author_institution": ["Texas A\\&M University"],
      "author": ["Ramalingam Saravanan"],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=nO0ceHmTlDQ",
      "author_institution_map": {
        "Ramalingam Saravanan": ["Texas A\\&M University"]
      },
      "title": "GraphTerm: A notebook-like graphical terminal interface for collaboration and inline data visualization"
    },
    {
      "authors": "Leonardo Uieda, Vanderlei C. Oliveira Jr, Valéria C. F. Barbosa",
      "doi": "10.25080/Majora-8b375195-010",
      "author_email": [
        "leouieda@gmail.com",
        "vandscoelho@gmail.com",
        "valcris@on.br"
      ],
      "page": {
        "stop": 98,
        "start": 92
      },
      "paper_id": "uieda",
      "copyright_holder": "Leonardo Uieda et al.",
      "abstract": [
        "Geophysics\nis the science of\nusing physical observations of the Earth\nto infer its inner structure.\nGenerally, this is done\nwith a variety of\nnumerical modeling techniques\nand inverse problems.\nThe development of new algorithms\nusually involves\ncopy and pasting of code,\nwhich leads to errors\nand poor code reuse.\nFatiando a Terra is\na Python library that aims to\nautomate common tasks and\nunify the modeling pipeline\ninside of the Python language.\nThis allows users to replace\nthe traditional shell scripting\nwith more versatile and powerful\nPython scripting.\nThe library can also be used\nas an API for\ndeveloping stand-alone programs.\nAlgorithms implemented in Fatiando a Terra\ncan be combined to build upon existing functionality.\nThis flexibility facilitates\nprototyping of new algorithms\nand quickly building interactive teaching exercises.\nIn the future,\nwe plan to continuously implement\nsample problems to help teach geophysics\nas well as\nclassic and state-of-the-art algorithms."
      ],
      "keywords": "geophysics, modeling, inverse problems",
      "pages": 7,
      "author_institution": [
        "Observatorio Nacional",
        "Observatorio Nacional",
        "Observatorio Nacional"
      ],
      "author": [
        "Leonardo Uieda",
        "Vanderlei C. Oliveira Jr",
        "Valéria C. F. Barbosa"
      ],
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=Ec38h1oB8cc",
      "author_institution_map": {
        "Vanderlei C. Oliveira Jr": ["Observatorio Nacional"],
        "Valéria C. F. Barbosa": ["Observatorio Nacional"],
        "Leonardo Uieda": ["Observatorio Nacional"]
      },
      "title": "Modeling the Earth with Fatiando a Terra"
    }
  ]
}
