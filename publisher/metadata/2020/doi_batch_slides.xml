<doi_batch xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="4.4.2" xmlns="http://www.crossref.org/schema/4.4.2" xsi:schemaLocation="http://www.crossref.org/schema/4.4.2 http://www.crossref.org/schemas/crossref4.4.2.xsd"><head><doi_batch_id>Majora.342d178e-1738f0d482a</doi_batch_id><timestamp>1595854479</timestamp><depositor><depositor_name>Dillon Niederhut</depositor_name><email_address>dillon.niederhut@gmail.com</email_address></depositor><registrant>Crossref</registrant></head><body><database><database_metadata language="en"><contributors><person_name contributor_role="editor" sequence="first"><given_name>Dillon</given_name><surname>Niederhut</surname></person_name></contributors><titles><title>Proceedings of the Python in Science Conference</title></titles></database_metadata><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Christine</given_name><surname>Smit</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Hailiang</given_name><surname>Zhang</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Mahabaleshwara</given_name><surname>Hegde</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Faith</given_name><surname>Giguere</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Long</given_name><surname>Pham</surname></person_name></contributors><titles><title>Treating gridded geospatial data as point data to simplify analytics</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>Gridded geospatial remote sensing (satellite) data has traditionally been stored in file-based multidimensional arrays to preserve the locality of data. Measurements from locations that are physically next to each other on earth remain next to each other in the arrays. Maintaining this locality is useful when running calculations like reprojection, but unnecessary for many other calculations. This talk will go through a real world example of a tool redesign at the Goddard Earth Sciences Data and Information Services Center (GES DISC), showing the advantages of using the data frame model for calculating summary statistics, where measurement proximity is unimportant.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-019</doi><resource>https://zenodo.org/record/3961207</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Benjamin</given_name><surname>Albrecht</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Michael</given_name><surname>Merrill</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>William</given_name><surname>Reus</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Brad</given_name><surname>Chamberlain</surname></person_name></contributors><titles><title>Arkouda: Terascale Data Science at Interactive Rates</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>This talk describes Arkouda, a Python package that we have developed for doing exploratory analysis on massive data sets at interactive rates. Arkouda's API is based on NumPy/Pandas, yet its arrays can be transparently distributed across the compute nodes of a cluster or supercomputer to support large-scale analytics. In our work, we have run Arkouda operations from Jupyter notebooks on TB-sized data sets in seconds to small numbers of minutes&#8212;achieving scalability and performance that we have not observed with competing technologies.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-01a</doi><resource>https://zenodo.org/record/3961209</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Henry</given_name><surname>Schreiner</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Hans</given_name><surname>Dembinski</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Jim</given_name><surname>Pivarski</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Shuo</given_name><surname>Liu</surname></person_name></contributors><titles><title>Boost-histogram: High-Performance Histograms as Objects</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>Boost-histogram is a new Python library that provides Histograms that can be filled, manipulated, sliced, and projected as objects.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-01b</doi><resource>https://zenodo.org/record/3961211</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Anne</given_name><surname>Carpenter</surname></person_name></contributors><titles><title>Open-source bioimage analysis software to accelerate drug discovery</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description></description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-01c</doi><resource>https://zenodo.org/record/3961216</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Adam</given_name><surname>Thompson</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Matt</given_name><surname>Nicely</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Graham</given_name><surname>Markall</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Brad</given_name><surname>Rees</surname></person_name></contributors><titles><title>cuSignal - GPU Accelerating SciPy Signal with Numba and CuPy</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>cuSignal is a GPU accelerated signal processing library built around a SciPy Signal-like API, CuPy, and custom Numba and CuPy CUDA kernels. cuSignal is written exclusively in Python and demonstrates GPU speeds without a C++ software layer.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-01d</doi><resource>https://zenodo.org/record/3961218</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Lilly</given_name><surname>Winfree</surname></person_name></contributors><titles><title>Frictionless Data for Reproducible Biology</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>This talk discusses how biologists can make their data more reproducible using Frictionless Data's open source Python libraries</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-01e</doi><resource>https://zenodo.org/record/3961220</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Rollin</given_name><surname>Thomas</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Shane</given_name><surname>Canon</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Shreyas</given_name><surname>Cholia</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Matt</given_name><surname>Henderson</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Kelly</given_name><surname>Rowland</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Jon</given_name><surname>Hays</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>William</given_name><surname>Krinsman</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Justin</given_name><surname>Ley</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Labanya</given_name><surname>Mukhopadhyay</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Trevor</given_name><surname>Slaton</surname></person_name></contributors><titles><title>Interactive Supercomputing with Jupyter at the National Energy Research Scientific Computing Center</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>At the National Energy Research Scientific Computing (NERSC) Center, interactive access to high-performance computing and data through Jupyter is a priority. We will discuss the nuts and bolts of how Jupyter is deployed at NERSC, and how we've adapted to engage the Jupyter ecosystem and open-source community to deliver this key capability to our users. Jupyter is a major component in our Superfacility initiative, which aims to connect experimental and observational big data facilities (telescopes, microscopes, genome sequencers, light sources, etc.) with next-generation supercomputing and data capabilities at NERSC.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-01f</doi><resource>https://zenodo.org/record/3961224</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>C.A.M.</given_name><surname>Gerlach</surname></person_name></contributors><titles><title>Project Mjolnir: A Modular, Open-source Platform for Developing Scientific IoT Sensor Networks</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>From a humble beginning as a side effort using a Raspberry Pi to talk to lightning instruments, Project Mjolnir is evolving into a modular, open source client-server platform for developing scientific IoT sensor networks. Its goal is to enable scientists of many disciplines to employ low-cost hardware to robustly ingest, log and uplink periodic and on-demand science and engineering data and commands, controlled either autonomously or centrally, all with little or no bespoke code. The talk will discuss Mjolnir&#8217;s development and future, present examples of current projects built on it, and explore how to leverage it for new applications.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-020</doi><resource>https://zenodo.org/record/3961228</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Niels</given_name><surname>Bantilan</surname></person_name></contributors><titles><title>Pandera: Statistical Data Validation of Pandas Dataframes</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>This talk introduces pandera, an open source Python package for pandas data validation. It covers data validation in theory and practice, and goes through a case study analysis of the Fatal Encounters dataset to demonstrate how pandera can be used to make data analysis and machine learning more reproducible, robust, and reliable.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-021</doi><resource>https://zenodo.org/record/3961230</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Horacio</given_name><surname>Guzman</surname></person_name></contributors><titles><title>Molecular infrastructure for modeling viruses with pythonic-mediated packages: pyF4all</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>We model full viruses by coupling short highly-detailed molecular dynamics simulations with lower-resolution (but faster) continuum electrostatic models. Such multiscale approach enables to model a full virus in a desktop/small cluster-level infrastructure, which are available for most researchers. Here, we propose a first interfacing of the pythonic-like packages in a multiscale approach that automatizes the access to state-of-the-art biomolecular simulations via Jupyter Notebooks.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-022</doi><resource>https://zenodo.org/record/3961232</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Matthew</given_name><surname>Feickert</surname></person_name></contributors><titles><title>pyhf: a pure Python statistical fitting library with tensors and autograd</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>pyhf is a pure-Python implementation of the HistFactory statistical model for multi-bin histogram-based analysis with asymptotic interval estimation, and part of the Scikit-HEP project ecosystem. pyhf supports modern computational graph libraries as computational backends in order to make use of features such as auto-differentiation and GPU acceleration. Additionally, the statistical models are defined in a declarative JSON schema, readily enabling preservation and distribution through services such as the Durham High-Energy Physics Database (HEPData).</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-023</doi><resource>https://zenodo.org/record/3961236</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Jon</given_name><surname>Mease</surname></person_name></contributors><titles><title>Bringing GPU Support to Datashader: A RAPIDS Case Study</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>A case study on using RAPIDS technologies to add GPU support to the Datashader Python library</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-024</doi><resource>https://zenodo.org/record/3961238</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Jacob</given_name><surname>Montiel</surname></person_name></contributors><titles><title>Learning from evolving data streams</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>A brief introduction to machine learning for evolving data streams. In this field data is assumed infinite and can change over time. scikit-multiflow, a package for stream learning in Python is also presented.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-025</doi><resource>https://zenodo.org/record/3961242</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Dharhas</given_name><surname>Pothina</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Kim</given_name><surname>Pevey</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Adam</given_name><surname>Lewis</surname></person_name></contributors><titles><title>Spatial Algorithms at Scale with spatialpandas</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>How do you analyze 1 trillion rows of geospatial point data?  We recently solved this problem using spatialpandas, dask, and parquet file format to efficiently build and execute spatial algorithms at scale. We compare the spatialpandas solution's performance with other cases, and discuss the tradeoffs with various approaches.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-026</doi><resource>https://zenodo.org/record/3961244</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>James</given_name><surname>Bednar</surname></person_name></contributors><titles><title>HoloViz: What's new and what's next</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>Updates and roadmaps for Panel, hvPlot, HoloViews, GeoViews, Datashader, Param, and Colorcet. The HoloViz suite of tools together form a unified approach for visualization from exploration to sharing applications and dashboards, building on the SciPy ecosystem to support easy visualization of large multidimensional or columnar datasets.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-028</doi><resource>https://zenodo.org/record/3961190</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Elliott</given_name><surname>de Andrade</surname></person_name></contributors><titles><title>SciPy Tools Plenary on Matplotlib</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python. This presentation summarizes changes over the past year, new features, and future plans.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-029</doi><resource>https://zenodo.org/record/3961192</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Siu</given_name><surname>Lam</surname></person_name></contributors><titles><title>SciPy Tools Plenary on Numba</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>Numba is a just-in-time compiler for a subset of Python. This is a short presentation of Numba updates for 2019-2020. </description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-02a</doi><resource>https://zenodo.org/record/3961194</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Matt</given_name><surname>Haberland</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Katy</given_name><surname>Craig</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Karthik</given_name><surname>Elamvazhuthi</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Olga</given_name><surname>Turanova</surname></person_name></contributors><titles><title>Decentralized, Deterministic Robot Swarm Control using Blob Methods for PDEs</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>A Jupyter notebook about robot swarm control, simulation, digital experiments, and computational considerations</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-018</doi><resource>https://zenodo.org/record/3961198</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Niels</given_name><surname>Bantilan</surname></person_name></contributors><titles><title>Building an AutoML System for Fun and Non-profit</title></titles><database_date><publication_date><year>2020</year></publication_date></database_date><description>This talk introduces metalearn, a MetaRL-based AutoML system that learns to learn how to propose hyperparameter selections that produce high validation scores on meta-test datasets.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation identifier-type="doi" relationship-type="isPartOf">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/Majora-342d178e-027</doi><resource>https://zenodo.org/record/3961204</resource></doi_data></dataset></database></body></doi_batch>
