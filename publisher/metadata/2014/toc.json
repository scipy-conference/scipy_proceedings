{
  "toc": [
    {
      "author": [
        "Andy Terrel",
        "Jonathan Rocher",
        "Stéfan van der Walt",
        "James Bergstra"
      ],
      "author_email": [
        "aterrell@tacc.utexas.edu",
        "jrocher@enthought.com",
        "stefanv@berkeley.edu",
        "james.bergstra@gmail.com"
      ],
      "doi": "10.25080/Majora-14bd3278-000",
      "page": {
        "start": 1,
        "stop": 1
      },
      "bibliography": "",
      "video": "",
      "paper_id": "00_intro",
      "author_institution": [
        "Continuum Analytics",
        "Enthought, Inc.",
        "University of California, Berkeley",
        "University of Waterloo"
      ],
      "author_institution_map": {
        "Andy Terrel": [
          "Continuum Analytics"
        ],
        "Jonathan Rocher": [
          "Enthought, Inc."
        ],
        "James Bergstra": [
          "University of Waterloo"
        ],
        "Stéfan van der Walt": [
          "University of California, Berkeley"
        ]
      },
      "abstract": [],
      "title": "Preface",
      "authors": "Andy Terrel, Jonathan Rocher, Stéfan van der Walt, James Bergstra",
      "keywords": "",
      "copyright_holder": "Andy Terrel et al."
    },
    {
      "pages": 3,
      "author_email": [
        "gwb6@psu.edu"
      ],
      "author": [
        "G William Baxter"
      ],
      "copyright_holder": "G William Baxter.",
      "doi": "10.25080/Majora-14bd3278-001",
      "page": {
        "start": 2,
        "stop": 4
      },
      "bibliography": "",
      "video": "",
      "paper_id": "baxter",
      "author_institution": [
        "Physics, School of Science, Penn State Erie - The Behrend College"
      ],
      "author_institution_map": {
        "G William Baxter": [
          "Physics, School of Science, Penn State Erie - The Behrend College"
        ]
      },
      "abstract": [
        "The physics community is working to improve the undergraduate curriculum to include computer skills that graduates will need in the workforce.  At Penn State Erie, The Behrend College, we have added computational tools to our Junior/Senior physics laboratory, PHYS421w Research Methods.  The course emphasizes Python software tools (SciPy) for data analysis rather than traditional programming.  The course uses real experiments to motivate the mastery of these tools."
      ],
      "title": "Scientific Computing with SciPy for Undergraduate Physics Majors",
      "authors": "G William Baxter",
      "keywords": "laboratory, computing, software tools, experiment"
    },
    {
      "pages": 8,
      "author_email": [
        "davclark@berkeley.edu",
        "aculich@berkeley.edu",
        "maplabs@light42.com",
        "rylo@berkeley.edu"
      ],
      "author": [
        "Dav Clark",
        "Aaron Culich",
        "Brian Hamlin",
        "Ryan Lovett"
      ],
      "copyright_holder": "Dav Clark et al.",
      "doi": "10.25080/Majora-14bd3278-002",
      "page": {
        "start": 5,
        "stop": 12
      },
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=e7jaZ5SFvFk",
      "paper_id": "clark",
      "author_institution": [
        "UC Berkeley",
        "UC Berkeley",
        "OSGeo California Chapter",
        "UC Berkeley"
      ],
      "author_institution_map": {
        "Dav Clark": [
          "UC Berkeley"
        ],
        "Brian Hamlin": [
          "OSGeo California Chapter"
        ],
        "Aaron Culich": [
          "UC Berkeley"
        ],
        "Ryan Lovett": [
          "UC Berkeley"
        ]
      },
      "abstract": [
        "There are numerous barriers to the use of scientific computing toolsets. These\nbarriers are becoming more apparent as we\nincreasingly see mixing of different academic backgrounds, and compute ranging\nfrom laptops to cloud platforms.\nMembers of the UC\nBerkeley D-Lab, Statistical Computing Facility (SCF), and Berkeley Research\nComputing (BRC) support such use-cases, and have developed\nstrategies that reduce the pain points that arise.\nWe begin by describing the variety of concrete training and research use-cases in which\nour strategy might increase accessibility, productivity, reuse, and reproducibility.\nWe then introduce available tools for the “recipe-based” creation of compute\nenvironments, attempting to demystify and provide a framework for thinking about\nDevOps (along with explaining what “DevOps” means!).\nAs a counterpoint to novel DevOps tools, we'll also examine the success of\nOSGeo-Live OSGL – a project that has\nmanaged to obtain and manage developer contributions for a large number of geospatial projects.\nThis is enabled through the use of commonly\nknown skills like shell scripting, and is a model of complexity that can be\nmanaged without these more recent DevOps tools.\nGiven our evaluation of a variety of technologies and\nuse-cases, we present our current strategy for constructing the Berkeley Common Environment BCE, along with general recommendations for building environments for your own use-cases."
      ],
      "title": "BCE: Berkeley's Common Scientific Compute Environment for Research and Education",
      "authors": "Dav Clark, Aaron Culich, Brian Hamlin, Ryan Lovett",
      "keywords": "education, reproducibility, virtualization"
    },
    {
      "pages": 6,
      "author_email": [
        "scollis@anl.gov",
        "sgrande@bnl.gov",
        "jhelmus@anl.gov",
        "di.wu@nasa.gov",
        "ann.fridlind@nasa.gov",
        "marcus.vanlier-walqui@nasa.gov",
        "atheisen@ou.edu"
      ],
      "author": [
        "Scott Collis",
        "Scott Giangrande",
        "Jonathan Helmus",
        "Di Wu",
        "Ann Fridlind",
        "Marcus van Lier-Walqui",
        "Adam Theisen"
      ],
      "copyright_holder": "Scott Collis et al.",
      "doi": "10.25080/Majora-14bd3278-003",
      "page": {
        "start": 13,
        "stop": 18
      },
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=1D0aTToHrCY",
      "paper_id": "collis",
      "author_institution": [
        "Environmental Sciences Division, Argonne National Laboratory.",
        "Atmospheric Sciences, Brookhaven National Laboratory.",
        "Environmental Sciences Division, Argonne National Laboratory.",
        "NASA Goddard Space Flight Center.",
        "NASA Goddard Institute of Space Sciences.",
        "NASA Goddard Institute of Space Sciences.",
        "University of Oklahoma, Cooperative Institute for Mesoscale Meteorological Studies, ARM Climate Research Facility Data Quality Office."
      ],
      "author_institution_map": {
        "Adam Theisen": [
          "University of Oklahoma, Cooperative Institute for Mesoscale Meteorological Studies, ARM Climate Research Facility Data Quality Office."
        ],
        "Scott Collis": [
          "Environmental Sciences Division, Argonne National Laboratory."
        ],
        "Ann Fridlind": [
          "NASA Goddard Institute of Space Sciences."
        ],
        "Jonathan Helmus": [
          "Environmental Sciences Division, Argonne National Laboratory."
        ],
        "Di Wu": [
          "NASA Goddard Space Flight Center."
        ],
        "Scott Giangrande": [
          "Atmospheric Sciences, Brookhaven National Laboratory."
        ],
        "Marcus van Lier-Walqui": [
          "NASA Goddard Institute of Space Sciences."
        ]
      },
      "abstract": [
        "Remote sensing data is complicated, very complicated! It is not only\ngeometrically tricky but also, unlike in-situ methods,\nindirect as the sensor measures the interaction\nof the scattering media (eg raindrops) with the probing radiation, not the geophysics. However the\nproblem is made tractable by the large number of algorithms available in the\nScientific Python community. While SciPy provides many helpful algorithms for\nsignal processing in this domain, a full software stack from highly specialized\nfile formats from specific sensors to interpretable geospatial analysis requires\na common data model for active remote sensing data that can act as a middle layer\nThis paper\nmotivates this work by asking: How big is a rainshaft? What is the natural\nmorphology of rainfall patterns and how well is this represented in fine\nscale atmospheric models. Rather than being specific to the domain of\nmeteorology, we will break down how we approach this problem in terms of the tools\nused from numerous Python packages to read, correct, map and reduce the data\ninto a form better able to answer our science questions. This is a \"how\" paper,\ncovering the Python-ARM Radar Toolkit (Py-ART) containing\nsignal processing using linear programming methods and mapping using k-d\ntrees. We also cover image analysis using SciPy's ndimage sub-module and graphics using\nmatplotlib."
      ],
      "title": "Measuring rainshafts: Bringing Python to bear on remote sensing data",
      "authors": "Scott Collis, Scott Giangrande, Jonathan Helmus, Di Wu, Ann Fridlind, Marcus van Lier-Walqui, Adam Theisen",
      "keywords": "Remote sensing, radar, meteorology, hydrology"
    },
    {
      "pages": 6,
      "author_email": [
        "david.ketcheson@kaust.edu.sa"
      ],
      "author": [
        "David I. Ketcheson"
      ],
      "copyright_holder": "David I. Ketcheson.",
      "doi": "10.25080/Majora-14bd3278-004",
      "page": {
        "start": 19,
        "stop": 24
      },
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=OaP6LiZuaFM",
      "paper_id": "ketcheson",
      "author_institution": [
        "King Abdullah University of Science and Technology"
      ],
      "author_institution_map": {
        "David I. Ketcheson": [
          "King Abdullah University of Science and Technology"
        ]
      },
      "abstract": [
        "A course in numerical methods should teach both the mathematical theory\nof numerical analysis and the craft of implementing numerical algorithms.\nThe IPython notebook provides a single medium in which mathematics,\nexplanations, executable code, and visualizations can be combined, and\nwith which the student can interact in order to learn both the theory and the\ncraft of numerical methods.  The use of notebooks also lends itself naturally\nto inquiry-based learning methods.\nI discuss the motivation and practice of teaching a course based on the use of\nIPython notebooks and inquiry-based learning, including some specific practical aspects.\nThe discussion is based on my experience teaching a Masters-level course\nin numerical analysis at King Abdullah University of Science and Technology (KAUST), but is intended to be useful for those\nwho teach at other levels or in industry."
      ],
      "title": "Teaching numerical methods with IPython notebooks and inquiry-based learning",
      "authors": "David I. Ketcheson",
      "keywords": "IPython, IPython notebook, teaching, numerical methods, inquiry-based learning"
    },
    {
      "pages": 7,
      "author_email": [
        "jklay@calpoly.edu"
      ],
      "author": [
        "Jennifer Klay"
      ],
      "copyright_holder": "Jennifer Klay.",
      "doi": "10.25080/Majora-14bd3278-005",
      "page": {
        "start": 25,
        "stop": 31
      },
      "bibliography": "",
      "video": "https://www.youtube.com/watch?v=eJhmMf6bHDU",
      "paper_id": "klay",
      "author_institution": [
        "California Polytechnic State University San Luis Obispo"
      ],
      "author_institution_map": {
        "Jennifer Klay": [
          "California Polytechnic State University San Luis Obispo"
        ]
      },
      "abstract": [
        "This paper presents an overview of a project-based course in computing for physics majors using Python and the IPython Notebook that was developed at Cal Poly San Luis Obispo.  The course materials are made freely available on GitHub as a project under the Computing4Physics C4P organization."
      ],
      "title": "Project-based introduction to scientific computing for physics majors",
      "authors": "Jennifer Klay",
      "keywords": "physics, scientific computing, undergraduate education"
    },
    {
      "pages": 6,
      "author_email": [
        "bjkomer@uwaterloo.ca",
        "james.bergstra@uwaterloo.ca",
        "celiasmith@uwaterloo.ca"
      ],
      "author": [
        "Brent Komer",
        "James Bergstra",
        "Chris Eliasmith"
      ],
      "copyright_holder": "Brent Komer et al.",
      "doi": "10.25080/Majora-14bd3278-006",
      "page": {
        "start": 32,
        "stop": 37
      },
      "bibliography": "",
      "video": "",
      "paper_id": "komer",
      "author_institution": [
        "Centre for Theoretical Neuroscience, University of Waterloo",
        "Centre for Theoretical Neuroscience, University of Waterloo",
        "Centre for Theoretical Neuroscience, University of Waterloo"
      ],
      "author_institution_map": {
        "Chris Eliasmith": [
          "Centre for Theoretical Neuroscience, University of Waterloo"
        ],
        "Brent Komer": [
          "Centre for Theoretical Neuroscience, University of Waterloo"
        ],
        "James Bergstra": [
          "Centre for Theoretical Neuroscience, University of Waterloo"
        ]
      },
      "abstract": [
        "Hyperopt-sklearn is a new software project that provides automatic algorithm configuration of the Scikit-learn machine learning library.\nFollowing Auto-Weka, we take the view that the choice of classifier and even the choice of preprocessing module can be taken together to represent a single large hyperparameter optimization problem.\nWe use Hyperopt to define a search space that encompasses many standard components (e.g. SVM, RF, KNN, PCA, TFIDF) and common patterns of composing them together.\nWe demonstrate, using search algorithms in Hyperopt and standard benchmarking data sets (MNIST, 20-Newsgroups, Convex Shapes), that searching this space is practical and effective.\nIn particular, we improve on best-known scores for the model space for both MNIST and Convex Shapes."
      ],
      "title": "Hyperopt-Sklearn: Automatic Hyperparameter Configuration for Scikit-Learn",
      "authors": "Brent Komer, James Bergstra, Chris Eliasmith",
      "keywords": "bayesian optimization, model selection, hyperparameter optimization, scikit-learn"
    },
    {
      "pages": 7,
      "author_email": [
        "jkuiper@anl.gov",
        "aayers@anl.gov",
        "mholm@anl.gov",
        "mnowak@anl.gov"
      ],
      "author": [
        "James A. Kuiper",
        "Andrew J. Ayers",
        "Michael E. Holm",
        "Michael J. Nowak"
      ],
      "copyright_holder": "James A. Kuiper et al.",
      "doi": "10.25080/Majora-14bd3278-007",
      "page": {
        "start": 38,
        "stop": 44
      },
      "bibliography": "",
      "video": "",
      "paper_id": "kuiper",
      "author_institution": [
        "Argonne National Laboratory",
        "Argonne National Laboratory",
        "Argonne National Laboratory",
        "Argonne National Laboratory"
      ],
      "author_institution_map": {
        "James A. Kuiper": [
          "Argonne National Laboratory"
        ],
        "Andrew J. Ayers": [
          "Argonne National Laboratory"
        ],
        "Michael J. Nowak": [
          "Argonne National Laboratory"
        ],
        "Michael E. Holm": [
          "Argonne National Laboratory"
        ]
      },
      "abstract": [
        "Python has powerful capabilities for coding elements of Web-based\nmapping applications. This paper highlights examples of analytical\ngeospatial processing services that we have implemented for several\nOpen Source-based development projects, including the Eastern\nInterconnection States' Planning Council (EISPC) Energy Zones Mapping\nTool (http://eispctools.anl.gov), the Solar Energy Environmental\nMapper (http://solarmapper.anl.gov), and the Ecological Risk\nCalculator (http://bogi.evs.anl.gov/erc/portal). We used common\nOpen Source tools such as GeoServer, PostGIS, GeoExt, and\nOpenLayers for the basic Web-based portal, then added custom\nanalytical tools to support more advanced functionality. The\nanalytical processes were implemented as Web Processing Services\n(WPSs) running on PyWPS, a Python implementation\nof the Open Geospatial Consortium (OGC) WPS. For report tools,\nareas drawn by the user in the map interface are submitted to a\nservice that utilizes the spatial extensions of PostGIS to\ngenerate buffers for use in querying and analyzing the underlying\ndata. Python code then post-processes the results and outputs\nJavaScript Object Notation (JSON)-formatted data for rendering.\nWe made use of PyWPS's integration with the Geographic Resources\nAnalysis Support System (GRASS) to implement flexible,\nuser-adjustable suitability models for several renewable energy\ngeneration technologies. In this paper, we provide details about\nthe processing methods we used within these project examples."
      ],
      "title": "Python Coding of Geospatial Processing in Web-based Mapping Applications",
      "authors": "James A. Kuiper, Andrew J. Ayers, Michael E. Holm, Michael J. Nowak",
      "keywords": "GIS, web-based mapping, PyWPS, PostGIS, GRASS, spatial modeling"
    },
    {
      "pages": 6,
      "author_email": [
        "jlaura@asu.edu",
        "srey@asu.edu"
      ],
      "author": [
        "Jason Laura",
        "Sergio J. Rey"
      ],
      "copyright_holder": "Jason Laura et al.",
      "doi": "10.25080/Majora-14bd3278-008",
      "page": {
        "start": 45,
        "stop": 50
      },
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=kNcA-yE_iNI",
      "paper_id": "laura",
      "author_institution": [
        "School of Geographical Sciences and Urban Planning, Arizona State University",
        "School of Geographical Sciences and Urban Planning, Arizona State University"
      ],
      "author_institution_map": {
        "Sergio J. Rey": [
          "School of Geographical Sciences and Urban Planning, Arizona State University"
        ],
        "Jason Laura": [
          "School of Geographical Sciences and Urban Planning, Arizona State University"
        ]
      },
      "abstract": [
        "Adjacency and neighbor structures play an essential role in many spatial analytical tasks.  The computation of adjacenecy structures is non-trivial and can form a significant processing bottleneck as the total number of observations increases.  We quantify the performance of synthetic and real world binary, first-order, adjacency algorithms and offer a solution that leverages Python's high performance containers.  A comparison of this algorithm with a traditional spatial decomposition shows that the former outperforms the latter as a function of the geometric complexity, i.e the number of vertices and edges."
      ],
      "title": "Scaling Polygon Adjacency Algorithms to Big Data Geospatial Analysis",
      "authors": "Jason Laura, Sergio J. Rey",
      "keywords": "adjacency, spatial analysis, spatial weights"
    },
    {
      "pages": 8,
      "author_email": [
        "kannan@iitb.ac.in"
      ],
      "author": [
        "Kannan M. Moudgalya"
      ],
      "copyright_holder": "Kannan M. Moudgalya.",
      "doi": "10.25080/Majora-14bd3278-009",
      "page": {
        "start": 51,
        "stop": 58
      },
      "bibliography": "",
      "video": "",
      "paper_id": "moudgalya",
      "author_institution": [
        "Dept. of Chemical Engineering, Education Technology, and System and Control Groups, IIT Bombay, India"
      ],
      "author_institution_map": {
        "Kannan M. Moudgalya": [
          "Dept. of Chemical Engineering, Education Technology, and System and Control Groups, IIT Bombay, India"
        ]
      },
      "abstract": [
        "This article explains an approach to promote Information Technology (IT)\nliteracy in India, which has evolved into a pyramid structure. We begin this\narticle by explaining the design decisions, such as the use of FOSS and\nbeing a friendly interface between beginners and experts, in undertaking\nthis activity.",
        "A Spoken Tutorial is a ten minute audio video tutorial on open source\nsoftware, created to provide training on important IT topics.  Spoken\nTutorials are made suitable for self learning, through a novice check\nof the underlying script. The spoken part of these tutorials is dubbed\nin all Indian languages, to help children who are weak in English,\nwhile retaining employment potential. The effectiveness of conducting\nworkshops using spoken tutorials is explained.  A total of 400,000\nstudents have been trained in the past three years through one or more\nSpoken Tutorial based Education and Learning through Free FOSS study\n(SELF) workshops.",
        "Students who undergo SELF workshops can create textbook companions, which\ncontain code for the solved problems of given textbooks using a particular\nsoftware. A Python Textbook Companion is a collection of Python code for a\ngiven textbook. These companions and the associated textbook, together, form\na low cost document for Python in general, and the textbook, in particular.\nWe have completed approximately 80 Python Textbook Companions and another 80\nare in progress. From textbook companions, the students can progress to lab\nmigration activity, the objective of which is to migrate labs based on\nproprietary software to FOSS. Interested students are trained to use FOSS\nsystems in their projects and to contribute to the development of new FOSS\nsystems. Using this approach and Python as a glue language, we have\ndeveloped the following new FOSS systems: 1. Oscad, an electronic design\nautomation tool, and a FOSS alternative to commercial software, such as\nORCAD. 2. Sandhi, a block diagram based data acquisition for real time\ncontrol, and a FOSS alternative to commercial software, such as LabVIEW.",
        "The pyramid structure explained in this work helps the beginners to become\nIT literate. Our design solutions are especially suitable to poor and\nmarginalised sections of the society, which is at the bottom of the social\npyramid. Our efforts to create and promote the world’s lowest cost computing\nsystem Aakash is briefly addressed in this work."
      ],
      "title": "Campaign for IT literacy through FOSS and Spoken Tutorials",
      "authors": "Kannan M. Moudgalya",
      "keywords": "Python, spoken tutorials, FOSSEE"
    },
    {
      "pages": 6,
      "author_email": [
        "pugh@maths.ox.ac.uk"
      ],
      "author": [
        "David R. Pugh"
      ],
      "copyright_holder": "David R. Pugh.",
      "doi": "10.25080/Majora-14bd3278-00a",
      "page": {
        "start": 59,
        "stop": 64
      },
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=xHkGW1l5X8k",
      "paper_id": "pugh",
      "author_institution": [
        "School of Economics, University of Edinburgh; Institute for New Economic Thinking at the Oxford Martin School and Oxford Mathematical Institute, University of Oxford"
      ],
      "author_institution_map": {
        "David R. Pugh": [
          "School of Economics, University of Edinburgh; Institute for New Economic Thinking at the Oxford Martin School and Oxford Mathematical Institute, University of Oxford"
        ]
      },
      "abstract": [
        "Together with theory and experimentation, computational modeling and simulation has become a “third pillar” of scientific inquiry. I am developing a curriculum for a three part, graduate level course on computational methods designed to increase the exposure of graduate students and researchers in the School of Economics at the University of Edinburgh to basic techniques used in computational modeling and simulation using the Python programming language. My course requires no prior knowledge or experience with computer programming or software development and all current and future course materials will be made freely available on-line via GitHub."
      ],
      "title": "Python for research and teaching economics",
      "authors": "David R. Pugh",
      "keywords": "python, computational economics, dynamic economic models, numerical methods"
    },
    {
      "pages": 7,
      "author_email": [
        "dpsanders@ciencias.unam.mx",
        "benet@fis.unam.mx"
      ],
      "author": [
        "David P. Sanders",
        "Luis Benet"
      ],
      "copyright_holder": "David P. Sanders et al.",
      "doi": "10.25080/Majora-14bd3278-00b",
      "page": {
        "start": 65,
        "stop": 71
      },
      "bibliography": "",
      "video": "",
      "paper_id": "sanders",
      "author_institution": [
        "Department of Physics, Faculty of Sciences,\nNational Autonomous University of Mexico (UNAM), Ciudad Universitaria,\nMéxico D.F. 04510, Mexico",
        "Institute of Physical Sciences,\nNational Autonomous University of Mexico (UNAM),\nApartado postal 48-3, Cuernavaca 62551, Morelos,\nMexico"
      ],
      "author_institution_map": {
        "David P. Sanders": [
          "Department of Physics, Faculty of Sciences,\nNational Autonomous University of Mexico (UNAM), Ciudad Universitaria,\nMéxico D.F. 04510, Mexico"
        ],
        "Luis Benet": [
          "Institute of Physical Sciences,\nNational Autonomous University of Mexico (UNAM),\nApartado postal 48-3, Cuernavaca 62551, Morelos,\nMexico"
        ]
      },
      "abstract": [
        "We introduce the ValidiPy package for validated numerics in\nPython. This suite of tools, which includes interval arithmetic and automatic\ndifferentiation, enables rigorous and guaranteed results using floating-point\narithmetic. We apply the ValidiPy package to two classic problems in dynamical systems,\ncalculating periodic points of the logistic map, and simulating the\ndynamics of a chaotic billiard model."
      ],
      "title": "Validated numerics with Python: the ValidiPy package",
      "authors": "David P. Sanders, Luis Benet",
      "keywords": "validated numerics, Newton method, floating point, interval arithmetic"
    },
    {
      "pages": 7,
      "author_email": [
        "sarava@tamu.edu"
      ],
      "author": [
        "Ramalingam Saravanan"
      ],
      "copyright_holder": "Ramalingam Saravanan.",
      "doi": "10.25080/Majora-14bd3278-00c",
      "page": {
        "start": 72,
        "stop": 78
      },
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=LiZJMYxvJbQ",
      "paper_id": "saravanan",
      "author_institution": [
        "Texas A\\&M University"
      ],
      "author_institution_map": {
        "Ramalingam Saravanan": [
          "Texas A\\&M University"
        ]
      },
      "abstract": [
        "With laptops and tablets becoming more powerful and more ubiquitous\nin the classroom, traditional computer labs with rows of expensive\ndesktop computers are slowly beginning to lose their relevance. An\nalternative approach for teaching Python is to use a browser-based\nvirtual computer lab, with a notebook interface. The advantages\nof physical computer labs, such as face-to-face interaction, and\nthe challenge of replicating them in a virtual environment are\ndiscussed. The need for collaborative features like\nterminal/notebook sharing and chatting is emphasized. A virtual computer lab is\nimplemented using the GraphTerm server, with several experimental features\nincluding a virtual dashboard for monitoring tasks and progressively\nfillable notebooks for ensuring step-by-step completion of a\nsequence of tasks."
      ],
      "title": "Creating a browser-based virtual computer lab for classroom instruction",
      "authors": "Ramalingam Saravanan",
      "keywords": "virtual computer lab, notebook interface, cloud computing, browser-based terminal"
    },
    {
      "pages": 6,
      "author_email": [
        "kthyng@tamu.edu",
        "hetland@tamu.edu"
      ],
      "author": [
        "Kristen M. Thyng",
        "Robert D. Hetland"
      ],
      "copyright_holder": "Kristen M. Thyng et al.",
      "doi": "10.25080/Majora-14bd3278-00d",
      "page": {
        "start": 79,
        "stop": 84
      },
      "bibliography": "",
      "video": "https://www.youtube.com/watch?v=8poLWacun50",
      "paper_id": "thyng",
      "author_institution": [
        "Texas A\\&M University",
        "Texas A\\&M University"
      ],
      "author_institution_map": {
        "Robert D. Hetland": [
          "Texas A\\&M University"
        ],
        "Kristen M. Thyng": [
          "Texas A\\&M University"
        ]
      },
      "abstract": [
        "Numerical Lagrangian trajectory modeling is a natural method of investigating transport in a circulation system and understanding the physics on the wide range of length scales that are actually experienced by a drifter. A previously-developed tool, TRACMASS, written in Fortran, accomplishes this modeling with a clever algorithm that operates natively on the commonly used staggered Arakawa C grid. TracPy is a Python wrapper written to ease running batches of simulations. Some improvements in TracPy include updating to netCDF4-CLASSIC from netCDF3 for saving drifter trajectories, providing an iPython notebook as a usermanual for using the system, and adding unit tests for stable continued development."
      ],
      "title": "TracPy: Wrapping the Fortran Lagrangian trajectory model TRACMASS",
      "authors": "Kristen M. Thyng, Robert D. Hetland",
      "keywords": "Lagrangian tracking, numerical drifters, Python wrapper"
    },
    {
      "pages": 9,
      "author_email": [
        "jakevdp@cs.washington.edu"
      ],
      "author": [
        "Jake VanderPlas"
      ],
      "copyright_holder": "Jake VanderPlas.",
      "doi": "10.25080/Majora-14bd3278-00e",
      "page": {
        "start": 85,
        "stop": 93
      },
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=KhAUfqhLakw",
      "paper_id": "vanderplas",
      "author_institution": [
        "eScience Institute, University of Washington"
      ],
      "author_institution_map": {
        "Jake VanderPlas": [
          "eScience Institute, University of Washington"
        ]
      },
      "abstract": [
        "This paper presents a brief, semi-technical comparison of the essential features of the frequentist and Bayesian approaches to statistical inference, with several illustrative examples implemented in Python. The differences between frequentism and Bayesianism fundamentally stem from differing definitions of probability, a philosophical divide which leads to distinct approaches to the solution of statistical problems as well as contrasting ways of asking and answering questions about unknown parameters. After an example-driven discussion of these differences, we briefly compare several leading Python statistical packages which implement frequentist inference using classical methods and Bayesian inference using Markov Chain Monte Carlo.1"
      ],
      "title": "Frequentism and Bayesianism: A Python-driven Primer",
      "authors": "Jake VanderPlas",
      "keywords": "statistics, frequentism, Bayesian inference"
    },
    {
      "pages": 4,
      "author_email": [
        "mwiebe@continuum.io",
        "mrocklin@continuum.io",
        "tj.alumbaugh@continuum.io",
        "aterrel@continuum.io"
      ],
      "author": [
        "Mark Wiebe",
        "Matthew Rocklin",
        "TJ Alumbaugh",
        "Andy Terrel"
      ],
      "copyright_holder": "Mark Wiebe et al.",
      "doi": "10.25080/Majora-14bd3278-00f",
      "page": {
        "start": 94,
        "stop": 97
      },
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=9HPR-1PdZUk",
      "paper_id": "wiebe",
      "author_institution": [
        "Continuum Analytics",
        "Continuum Analytics",
        "Continuum Analytics",
        "Continuum Analytics"
      ],
      "author_institution_map": {
        "TJ Alumbaugh": [
          "Continuum Analytics"
        ],
        "Mark Wiebe": [
          "Continuum Analytics"
        ],
        "Matthew Rocklin": [
          "Continuum Analytics"
        ],
        "Andy Terrel": [
          "Continuum Analytics"
        ]
      },
      "abstract": [
        "We present the motivation and architecture of Blaze, a library for\ncross-backend data-oriented computation.  Blaze provides a standard interface\nto connect users familiar with NumPy and Pandas to other data analytics\nlibraries like SQLAlchemy and Spark.  We motivate the use of these projects\nthrough Blaze and discuss the benefits of standard interfaces on top of an\nincreasingly varied software ecosystem. We give an overview of the Blaze\narchitecture and then demonstrate its use on a typical problem.  We use the\nabstract nature of Blaze to quickly benchmark and compare the performance of a\nvariety of backends on a standard problem."
      ],
      "title": "Blaze: Building A Foundation for Array-Oriented Computing in Python",
      "authors": "Mark Wiebe, Matthew Rocklin, TJ Alumbaugh, Andy Terrel",
      "keywords": "array programming, big data, numpy, scipy, pandas"
    },
    {
      "pages": 7,
      "author_email": [
        "jzuhone@milkyway.gsfc.nasa.gov",
        "biffi@sissa.it",
        "hallman13@gmail.com",
        "srandall@cfa.harvard.edu",
        "afoster@cfa.harvard.edu",
        "christian.schmid@sternwarte.uni-erlangen.de"
      ],
      "author": [
        "John A. ZuHone",
        "Veronica Biffi",
        "Eric J. Hallman",
        "Scott W. Randall",
        "Adam R. Foster",
        "Christian Schmid"
      ],
      "copyright_holder": "John A. ZuHone et al.",
      "doi": "10.25080/Majora-14bd3278-010",
      "page": {
        "start": 98,
        "stop": 104
      },
      "bibliography": "",
      "video": "http://www.youtube.com/watch?v=fUMq6rmNshc",
      "paper_id": "zuhone",
      "author_institution": [
        "Astrophysics Science Division, Laboratory for High Energy Astrophysics, Code 662, NASA/Goddard Space Flight Center, Greenbelt, MD 20771",
        "SISSA - Scuola Internazionale Superiore di Studi Avanzati, Via Bonomea 265, 34136 Trieste, Italy",
        "Center for Astrophysics and Space Astronomy, Department of Astrophysical \\& Planetary Science, University of Colorado, Boulder, CO 80309",
        "Harvard-Smithsonian Center for Astrophysics, 60 Garden Street, Cambridge, MA 02138",
        "Harvard-Smithsonian Center for Astrophysics, 60 Garden Street, Cambridge, MA 02138",
        "Dr. Karl Remeis-Sternwarte \\& ECAP, Sternwartstr. 7, 96049 Bamberg, Germany"
      ],
      "author_institution_map": {
        "Scott W. Randall": [
          "Harvard-Smithsonian Center for Astrophysics, 60 Garden Street, Cambridge, MA 02138"
        ],
        "Eric J. Hallman": [
          "Center for Astrophysics and Space Astronomy, Department of Astrophysical \\& Planetary Science, University of Colorado, Boulder, CO 80309"
        ],
        "Adam R. Foster": [
          "Harvard-Smithsonian Center for Astrophysics, 60 Garden Street, Cambridge, MA 02138"
        ],
        "Veronica Biffi": [
          "SISSA - Scuola Internazionale Superiore di Studi Avanzati, Via Bonomea 265, 34136 Trieste, Italy"
        ],
        "John A. ZuHone": [
          "Astrophysics Science Division, Laboratory for High Energy Astrophysics, Code 662, NASA/Goddard Space Flight Center, Greenbelt, MD 20771"
        ],
        "Christian Schmid": [
          "Dr. Karl Remeis-Sternwarte \\& ECAP, Sternwartstr. 7, 96049 Bamberg, Germany"
        ]
      },
      "abstract": [
        "X-ray astronomy is an important tool in the astrophysicist's toolkit to investigate\nhigh-energy astrophysical phenomena. Theoretical numerical simulations of astrophysical\nsources are fully three-dimensional representations of physical quantities such as\ndensity, temperature, and pressure, whereas astronomical observations are\ntwo-dimensional projections of the emission generated via mechanisms dependent on these\nquantities. To bridge the gap between simulations and observations, algorithms for\ngenerating synthetic observations of simulated data have been developed. We present an\nimplementation of such an algorithm in the yt analysis software package. We describe\nthe underlying model for generating the X-ray photons, the important role that yt\nand other Python packages play in its implementation, and present a detailed workable\nexample of the creation of simulated X-ray observations."
      ],
      "title": "Simulating X-ray Observations with Python",
      "authors": "John A. ZuHone, Veronica Biffi, Eric J. Hallman, Scott W. Randall, Adam R. Foster, Christian Schmid",
      "keywords": "astronomical observations, astrophysics simulations, visualization"
    }
  ]
}
