<doi_batch xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="4.4.2" xmlns="http://www.crossref.org/schema/4.4.2" xsi:schemaLocation="http://www.crossref.org/schema/4.4.2 http://www.crossref.org/schemas/crossref4.4.2.xsd"><head><doi_batch_id>majora.212e5952-18257e7ec2c</doi_batch_id><timestamp>1659353893</timestamp><depositor><depositor_name>Dillon Niederhut</depositor_name><email_address>dillon.niederhut@gmail.com</email_address></depositor><registrant>Crossref</registrant></head><body><database><database_metadata language="en"><contributors><person_name contributor_role="editor" sequence="first"><given_name>Dillon</given_name><surname>Niederhut</surname></person_name></contributors><titles><title>Proceedings of the Python in Science Conference</title></titles></database_metadata><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Delaina</given_name><surname>Moore</surname></person_name></contributors><titles><title>Downsampling Time Series Data for Visualizations</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Exploring the largest triangle three bucket algorithm to downsample time series data.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-027</doi><resource>https://zenodo.org/record/6946652</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Matthew</given_name><surname>Feickert</surname><ORCID>https://orcid.org/0000-0003-4124-7862</ORCID></person_name></contributors><titles><title>Analysis as Applications: Quick introduction to lockfiles</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>An opinionated argument for the use of lockfiles in scientific analysis in a similar manner to Python application deployment. This talk was inspired by Brett Cannon's 'pip-secure-install' project and a Twitter conversation with Dustin Ingram on April 20, 2020.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-028</doi><resource>https://zenodo.org/record/6946666</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Matt</given_name><surname>Haberland</surname><ORCID>https://orcid.org/0000-0003-4806-3601</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Nicholas</given_name><surname>McKibben</surname><ORCID>https://orcid.org/0000-0003-0034-2230</ORCID></person_name></contributors><titles><title>Optimal Review Assignments for the SciPy Conference Using Binary Integer Linear Programming in SciPy 1.9</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Each year, the SciPy Conference receives hundreds of submissions, and dozens of volunteers offer to review them to help make selections for the conference. How should submissions be assigned to reviewers to distribute the work fairly while 1) ensuring that each submission receives at least three reviews, 2) preventing conflicts of interest, and 3) respecting reviewers' domains of expertise? Binary integer linear programming is an ideal framework for defining and solving 'scheduling' or 'assignment' problems like this. In this poster, we show how users can formulate and solve problems of this type with new, accessible tools in the scientific Python ecosystem.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-029</doi><resource>https://zenodo.org/record/6946674</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Daniel</given_name><surname>Mor&#233;</surname><ORCID>https://orcid.org/0000-0003-1759-4194</ORCID></person_name></contributors><titles><title>Contributing to Open Source Software: From not knowing Python to becoming a Spyder core developer</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Experience overview of becoming an open source developer and updates on the work being done in the Spyder IDE project for 2022</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-02a</doi><resource>https://zenodo.org/record/6946686</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Nathan</given_name><surname>Jessurun</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Olivia</given_name><surname>Dizon-Paradis</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Dan</given_name><surname>Capecci</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Damon</given_name><surname>Woodard</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Navid</given_name><surname>Asadizanjani</surname></person_name></contributors><titles><title>Semi-Supervised Semantic Annotator (S3A): Toward Efficient Semantic Image Labeling</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Python GUI and library for semantic image segmentation and annotation</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-02b</doi><resource>https://zenodo.org/record/6946702</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Nezar</given_name><surname>Abdennur</surname><ORCID>https://orcid.org/0000-0001-5814-0864</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Geoffrey</given_name><surname>Fudenberg</surname><ORCID>https://orcid.org/0000-0001-5905-6517</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Ilya</given_name><surname>Flyamer</surname><ORCID>https://orcid.org/0000-0002-4892-4208</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Aleksandra</given_name><surname>Galitsyna</surname><ORCID>https://orcid.org/0000-0001-8969-5694</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Anton</given_name><surname>Goloborodko</surname><ORCID>https://orcid.org/0000-0002-2210-8616</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Maxim</given_name><surname>Imakaev</surname><ORCID>https://orcid.org/0000-0002-5320-2728</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Trevor</given_name><surname>Manz</surname><ORCID>https://orcid.org/0000-0001-7694-5164</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Sergey</given_name><surname>Venev</surname><ORCID>https://orcid.org/0000-0002-1507-7460</ORCID></person_name></contributors><titles><title>Bioframe: Operating on Genomic Interval Dataframes</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Python library for working with genomic interval dataframes.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-02c</doi><resource>https://zenodo.org/record/6946712</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Joseph</given_name><surname>Tuccillo</surname><ORCID>https://orcid.org/0000-0002-5930-0943</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>James</given_name><surname>Gaboardi</surname><ORCID>https://orcid.org/0000-0002-4776-6826</ORCID></person_name></contributors><titles><title>Likeness: a toolkit for connecting the social fabric of place to human dynamics</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Richly-attributed synthetic population data are crucial for discerning human dynamics while preserving privacy. The Likeness toolkit provides a solution to this problem with a suite of Python packages that generate population data as individual agents in appropriate nighttime locations and allocates them to probable daytime activity spaces. Through a case study utilizing students and faculty as agents, the results of Likeness simulations are shown to recreate high-fidelity school capacities, comparable to empirical data sources.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-02d</doi><resource>https://zenodo.org/record/6946720</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Jyotika</given_name><surname>Singh</surname><ORCID>https://orcid.org/0000-0002-5442-3004</ORCID></person_name></contributors><titles><title>pyAudioProcessing: Audio Processing, Feature Extraction, and Machine Learning Modeling</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>pyAudioProcessing is a Python based library for processing audio data, constructing and extracting numerical features from audio, building and testing machine learning models, and classifying data with existing pre-trained audio classification models or custom user-built models. This library contains features built in Python that were originally published in MATLAB. pyAudioProcessing allows the user to compute various features from audio files including Gammatone Frequency Cepstral Coefficients (GFCC), Mel Frequency Cepstral Coefficients (MFCC), spectral features, chroma features, and others such as beat-based and cepstrum-based features from audio. One can use these features along with one&#8217;s own classification backend or any of the popular scikit-learn classifiers that have been integrated into pyAudioProcessing. Cleaning functions to strip unwanted portions from the audio are another offering of the library. It further contains integrations with other audio functionalities such as frequency and time-series visualizations and audio format conversions. This software aims to provide machine learning engineers, data scientists, researchers, and students with a set of baseline models to classify audio. The library is available at https://github.com/jsingh811/pyAudioProcessing and is under GPL-3.0 license.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-02e</doi><resource>https://zenodo.org/record/6946724</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Neelima</given_name><surname>Pulagam</surname><ORCID>https://orcid.org/0000-0002-4584-9513</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Sai</given_name><surname>Marasani</surname><ORCID>https://orcid.org/0000-0002-8211-7186</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Brian</given_name><surname>Sass</surname></person_name></contributors><titles><title>Kiwi: Python Tool for Tex Processing and Classification</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>A user-friendly desktop tool for text visualization and classification. This allows users within the field to avoid creating boilerplate code for basic NLP tasks and users new to machine learning to plug and play with various models and methods. Our main goal is to make natural language processing accessible and easy.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-02f</doi><resource>https://zenodo.org/record/6946734</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Wanlin</given_name><surname>Li</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Aleksandr</given_name><surname>Koshkarov</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>My-Linh</given_name><surname>Luu</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Nadia</given_name><surname>Tahiri</surname></person_name></contributors><titles><title>Phylogeography: Analysis of genetic and climatic data of SARS-CoV-2</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Due to the fact that the SARS-CoV-2 pandemic reaches its peak, researchers around the globe are combining efforts to investigate the genetics of different variants to better deal with its distribution. This paper discusses phylogeographic approaches to examine how patterns of divergence within SARS-CoV-2 coincide with geographic features, such as climatic features. First, we propose a python-based bioinformatic pipeline called **aPhylogeo** for phylogeographic analysis written in Python 3 that help researchers better understand the distribution of the virus in specific regions via a configuration file, and then run all the analysis operations in a single run. In particular, the aPhylogeo tool determines which parts of the genetic sequence undergo a high mutation rate depending on geographic conditions, using a sliding window that moves along the genetic sequence alignment in user-defined steps and a window size. As a Python-based cross-platform program, aPhylogeo works on Windows&#174;, MacOS X&#174; and GNU/Linux. The implementation of this pipeline is publicly available on GitHub (https://github.com/tahiri-lab/aPhylogeo). Second, we present an example of analysis of our new aPhylogeo tool on real data (SARS-CoV-2) to understand the occurrence of different variants.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-030</doi><resource>https://zenodo.org/record/6946742</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Nathan</given_name><surname>Martindale</surname><ORCID>https://orcid.org/0000-0002-5036-5433</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Jason</given_name><surname>Hite</surname><ORCID>https://orcid.org/0000-0001-8931-5815</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Scott</given_name><surname>Stewart</surname><ORCID>https://orcid.org/0000-0003-4320-5818</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Mark</given_name><surname>Adams</surname><ORCID>https://orcid.org/0000-0002-5414-2800</ORCID></person_name></contributors><titles><title>Design of a Scientific Data Analysis Support Platform</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Studying the design features necessary for a workflow and experiment management system, and presenting Curifactory: an open source package that meets these design features.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-031</doi><resource>https://zenodo.org/record/6946750</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Zachary</given_name><surname>Sherman</surname><ORCID>https://orcid.org/0000-0002-6455-8324</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Scott</given_name><surname>Collis</surname><ORCID>https://orcid.org/0000-0002-2303-687X</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Max</given_name><surname>Grover</surname><ORCID>https://orcid.org/0000-0002-0370-8974</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Robert</given_name><surname>Jackson</surname><ORCID>https://orcid.org/0000-0003-2518-1234</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Adam</given_name><surname>Theisen</surname><ORCID>https://orcid.org/0000-0002-7602-1057</ORCID></person_name></contributors><titles><title>Opening ARM: A pivot to community software to meet the needs of users and stakeholders of the planet's largest cloud observatory</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>This presentation discusses the evolution (and hurdles that came with) of the Atmospheric Radiation Measurement (ARM) program's open source endeavors, starting with the Python ARM Radar Toolkit to the Atmospheric data Community Toolkit in 2018, the expansion of our open-source presence on Github in 2019 and what is planned for the future.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-032</doi><resource>https://zenodo.org/record/6946754</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Henry</given_name><surname>Schreiner</surname><ORCID>https://orcid.org/0000-0002-7833-783X</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Joe</given_name><surname>Rickerby</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Ralf</given_name><surname>Grosse-Kunstleve</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Wenzel</given_name><surname>Jakob</surname><ORCID>https://orcid.org/0000-0002-6090-1121</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Matthieu</given_name><surname>Darbois</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Aaron</given_name><surname>Gokaslan</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Jean-Christophe</given_name><surname>Fillion-Robin</surname><ORCID>https://orcid.org/0000-0002-9688-8950</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Matt</given_name><surname>McCormick</surname><ORCID>https://orcid.org/0000-0001-9475-3756</ORCID></person_name></contributors><titles><title>Building Binary Extensions with pybind11, scikit-build, and cibuildwheel</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Building binary extensions is easier than ever thanks to several key libraries. Pybind11 provides a natural C++ language for extensions without requiring pre-processing or special dependencies. Scikit-build ties the premier C++ build system, CMake, into the Python extension build process. And cibuildwheel makes it easy to build highly compatible wheels for over 80 different platforms using CI or on your local machine.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-033</doi><resource>https://zenodo.org/record/6946769</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Jackson</given_name><surname>Morgan</surname><ORCID>https://orcid.org/0000-0003-1379-5431</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Kyle</given_name><surname>Niemeyer</surname><ORCID>https://orcid.org/0000-0003-4425-7097</ORCID></person_name></contributors><titles><title>Python Development Schemes for Monte Carlo Neutronics on High Performance Computing</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>We investigate three methods of hardware accleeration on both GPUs and CPUs for a Monte Carlo neutron transport simulation code writen in Python. The accelerating schemes we examine are Pykokks, Numba, and hardware code generating libraries like PyCUDA. This work was supported by the Center for Exascale Monte-Carlo Neutron Transport (CEMeNT) a PSAAP-III project funded by the Department of Energy, grant number: DE-NA003967.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-034</doi><resource>https://zenodo.org/record/6946791</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Henry</given_name><surname>Schreiner</surname><ORCID>https://orcid.org/0000-0002-7833-783X</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Jim</given_name><surname>Pivarski</surname><ORCID>https://orcid.org/0000-0002-6649-343X</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Eduardo</given_name><surname>Rodrigues</surname><ORCID>https://orcid.org/0000-0003-2846-7625</ORCID></person_name></contributors><titles><title>Awkward Packaging: Building scikit-HEP</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Scikit-HEP has grown rapidly over the last few years, not just to serve the needs of the High Energy Physics (HEP) community, but in many ways, the Python ecosystem at large. AwkwardArray, boost-histogram/hist, and iMinuit are examples of libraries that are used beyond the original HEP focus.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-035</doi><resource>https://zenodo.org/record/6946801</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Matthew</given_name><surname>Petroff</surname><ORCID>https://orcid.org/0000-0002-4436-4215</ORCID></person_name></contributors><titles><title>Development of Accessible, Aesthetically-Pleasing Color Sequences</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Many types of data visualization, e.g., line plots and scatter plots, utilize a discrete palette of colors, a color sequence, to differentiate between the categories of data being plotted. Unfortunately, many commonly-used color sequences offer poor accessibility to individuals with color-vision deficiencies, using colors that such individuals find difficult to differentiate between. Here, the development of new, accessible color sequences is discussed. As new color sequences must be aesthetically pleasing if they are to see widespread adoption, a crowd-sourced survey was used to estimate aesthetic preference, while accessibility aspects were handled via quantitative analysis.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-036</doi><resource>https://zenodo.org/record/6946815</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Julius</given_name><surname>Busecke</surname><ORCID>https://orcid.org/0000-0001-8571-865X</ORCID></person_name></contributors><titles><title>Cutting Edge Climate Science in the Cloud with Pangeo</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Climate change is one of the most challenging issues of our time. To prevent the worst outcomes, we need to drastically accelerate the creation and distribution of scientific knowledge. But the complex and massive datasets produced by numerical climate models render the common 'download and analyze' workflow inefficient, blocking innovative analysis and fast scientific discoveries. We present python tools and cloud infrastructure developed within the Pangeo community, enabling cutting edge climate science from a web-browser, making it efficient, reproducible, and inclusive. To demonstrate these capabilities we will reproduce a plot from the IPCC report in a live cloud demonstration.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-037</doi><resource>https://zenodo.org/record/6946825</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Axel</given_name><surname>Donath</surname><ORCID>https://orcid.org/0000-0003-4568-7005</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Aneta</given_name><surname>Siemiginowska</surname><ORCID>https://orcid.org/0000-0002-0905-7375</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Vinay</given_name><surname>Kashyap</surname><ORCID>https://orcid.org/0000-0002-3869-7996</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Douglas</given_name><surname>Burke</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>Karthik</given_name><surname>Solipuram</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>David</given_name><surname>van Dyk</surname></person_name></contributors><titles><title>Pylira: deconvolution of images in the presence of Poisson noise</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Pylira is Python package for deconvolution for images in the presence of Poisson noise. In this presentation I will explain the method in detail, show the setup and API of the Python package as well as show application examples using real astronomical data.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-038</doi><resource>https://zenodo.org/record/6946829</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>GTforSD</given_name><surname>team</surname></person_name></contributors><titles><title>Accelerating Science with the Generative Toolkit for Scientific Discovery (GT4SD)</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>A presentation about GT4SD: an open-source platform to accelerate hypothesis generation in the scientific discovery process. It provides a library for making state-of-the-art generative AI models easier to use.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-039</doi><resource>https://zenodo.org/record/6946845</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Peter</given_name><surname>Sun</surname></person_name><person_name contributor_role="author" sequence="additional"><given_name>John</given_name><surname>Marohn</surname></person_name></contributors><titles><title>MModel: a modular modeling framework for scientific prototyping</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>MModel is a Python framework that allows for fast and modular prototyping. The library uses networkx graph for workflow construction and provides built-in toolkits such as subgraph modification and graph visualization with rich metadata.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-03a</doi><resource>https://zenodo.org/record/6946850</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>W.</given_name><surname>Shambaugh</surname><ORCID>https://orcid.org/0000-0002-4376-3599</ORCID></person_name></contributors><titles><title>Monaco: Quantify Uncertainty and Sensitivities in Your Computational Models with a Monte Carlo Library</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Quantify uncertainty and sensitivities in your existing computational models with the &#8220;monaco&#8221; library. Users define input variables randomly drawn from any of SciPy's statistical distributions, run their model in parallel anywhere from 1 to millions of times, and postprocess the outputs to obtain meaningful, statistically significant conclusions. This talk goes over why you should always be running Monte Carlo simulations, a demo of how to set up and run a sim, and a crash course in generating relevant plots and statistics.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-03b</doi><resource>https://zenodo.org/record/6946859</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Sebastian</given_name><surname>Berg</surname><ORCID>https://orcid.org/0000-0002-1236-259X</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>St&#233;fan</given_name><surname>van der Walt</surname><ORCID>https://orcid.org/0000-0001-9276-1891</ORCID></person_name></contributors><titles><title>UFuncs and DTypes: new possibilities in NumPy</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Over the past three years, NumPy has seen large changes to much of its core functionalities including universal functions, casting, and DTypes. The goal of this refactoring was to introduce extensible APIs to improve existing user-defined DTypes and unlock new ones. This refactoring is nearing its conclusion, with the work being surfaced as public-facing API. In this talk we will discuss what has been done, and newly possible applications&#8212;such as a custom NumPy DType that is aware of physical units.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-03c</doi><resource>https://zenodo.org/record/6946863</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Juan</given_name><surname>Rodr&#237;guez</surname><ORCID>https://orcid.org/0000-0002-2187-161X</ORCID></person_name></contributors><titles><title>Per Python ad astra: interactive Astrodynamics with poliastro</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>This talk presents poliastro, an open-source Python library for interactive Astrodynamics that features an easy-to-use API and tools for quick visualization. poliastro implements core Astrodynamics algorithms and leverages numba and Astropy. During the talk, we will describe the two-layer architecture that allows poliastro to offer an approachable API with good performance, discuss the challenges we faced to validate our code, and comment on the successes and failures of the project in trying to build a rich and diverse community. Source code of poliastro is available at https://github.com/poliastro/poliastro/ and documentation is online at https://docs.poliastro.space/.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-03d</doi><resource>https://zenodo.org/record/6946871</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Rianne</given_name><surname>Schouten</surname><ORCID>https://orcid.org/0000-0001-5026-4256</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Davina</given_name><surname>Zamanzadeh</surname><ORCID>https://orcid.org/0000-0002-9360-0069</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Prabhant</given_name><surname>Singh</surname><ORCID>https://orcid.org/0000-0001-7634-2312</ORCID></person_name></contributors><titles><title>pyampute: a Python library for data amputation</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Amputation is the opposite of imputation; it is the creation of a missing data mask for complete datasets. Amputation is useful for evaluating the effect of missing values on the outcome of a statistical or machine learning model. In this talk, we present pyampute: the first open-source Python library for data amputation. Our package is compatible with the scikit-learn-style fit and transform paradigm, which allows for seamless integration of amputation in a larger, more complex data processing pipeline.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-03e</doi><resource>https://zenodo.org/record/6946887</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Juanita</given_name><surname>Romero</surname><ORCID>https://orcid.org/0000-0003-1593-3404</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>St&#233;fan</given_name><surname>van der Walt</surname><ORCID>https://orcid.org/0000-0001-9276-1891</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>K.</given_name><surname>Millman</surname><ORCID>https://orcid.org/0000-0002-5263-5070</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Melissa</given_name><surname>Mendon&#231;a</surname><ORCID>https://orcid.org/0000-0002-3212-402X</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Inessa</given_name><surname>Pawson</surname><ORCID>https://orcid.org/0000-0001-7294-122X</ORCID></person_name></contributors><titles><title>Scientific Python: From GitHub to TikTok</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>The Scientific Python project aims to better coordinate the ecosystem and grow the community. This talk focuses on our efforts to expand our community by generating a welcoming and friendly environment where people collaborate, build, and improve together.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-03f</doi><resource>https://zenodo.org/record/6946897</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Pamphile</given_name><surname>Roy</surname><ORCID>https://orcid.org/0000-0001-9816-1416</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>St&#233;fan</given_name><surname>van der Walt</surname><ORCID>https://orcid.org/0000-0001-9276-1891</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>K.</given_name><surname>Millman</surname><ORCID>https://orcid.org/0000-0002-5263-5070</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Melissa</given_name><surname>Mendon&#231;a</surname><ORCID>https://orcid.org/0000-0002-3212-402X</ORCID></person_name></contributors><titles><title>Scientific Python: By maintainers, for maintainers</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Tools for maintainers and how we can help each others.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-040</doi><resource>https://zenodo.org/record/6946917</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Pamphile</given_name><surname>Roy</surname><ORCID>https://orcid.org/0000-0001-9816-1416</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Matt</given_name><surname>Haberland</surname><ORCID>https://orcid.org/0000-0003-4806-3601</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Christoph</given_name><surname>Baumgarten</surname><ORCID>https://orcid.org/0000-0002-1168-3359</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Tirth</given_name><surname>Patel</surname></person_name></contributors><titles><title>Improving random sampling in Python: scipy.stats.sampling and scipy.stats.qmc</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Why and how to use scipy.stats.sampling and scipy.stats.qmc?</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-041</doi><resource>https://zenodo.org/record/6946927</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Thomas</given_name><surname>Nicholas</surname><ORCID>https://orcid.org/0000-0002-2176-0530</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Julius</given_name><surname>Busecke</surname><ORCID>https://orcid.org/0000-0001-8571-865X</ORCID></person_name><person_name contributor_role="author" sequence="additional"><given_name>Ryan</given_name><surname>Abernathey</surname><ORCID>https://orcid.org/0000-0001-5999-4917</ORCID></person_name></contributors><titles><title>Petabyte-scale ocean data analytics on staggered grids via the grid ufunc protocol in xGCM</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>We analysed the highest resolution global ocean simulation to date, using xGCM, xhistogram, and dask.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-042</doi><resource>https://zenodo.org/record/6946933</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Inessa</given_name><surname>Pawson</surname><ORCID>https://orcid.org/0000-0001-7294-122X</ORCID></person_name></contributors><titles><title>SciPy Tools Plenary - CEL team</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Introducing the Contributor Experience Lead team at the SciPy 2022</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-043</doi><resource>https://zenodo.org/record/6947063</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Elliott</given_name><surname>de Andrade</surname><ORCID>https://orcid.org/0000-0001-7310-8942</ORCID></person_name></contributors><titles><title>SciPy Tools Plenary on Matplotlib</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python. This presentation summarizes changes over the past year, new features, and future plans.</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-044</doi><resource>https://zenodo.org/record/6946953</resource></doi_data></dataset><dataset dataset_type="other"><contributors><person_name contributor_role="author" sequence="first"><given_name>Inessa</given_name><surname>Pawson</surname><ORCID>https://orcid.org/0000-0001-7294-122X</ORCID></person_name></contributors><titles><title>SciPy Tools Plenary - NumPy</title></titles><database_date><publication_date><year>2022</year></publication_date></database_date><description>Annual update on the NumPy project at SciPy 2022</description><program name="relations" xmlns="http://www.crossref.org/relations.xsd"><related_item><inter_work_relation relationship-type="isPartOf" identifier-type="doi">10.25080/issn.2575-9752</inter_work_relation></related_item></program><doi_data><doi>10.25080/majora-212e5952-045</doi><resource>https://zenodo.org/record/6946961</resource></doi_data></dataset></database></body></doi_batch>